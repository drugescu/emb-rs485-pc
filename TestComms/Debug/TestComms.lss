
TestComms.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000dea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  00000dea  00000e7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000107  00800082  00800082  00000ea0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000086b  00000000  00000000  00000f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003af  00000000  00000000  000017e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037c  00000000  00000000  00001b96  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  00001f14  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000029c  00000000  00000000  00002074  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000056c  00000000  00000000  00002310  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000287c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	a6 c0       	rjmp	.+332    	; 0x164 <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea ee       	ldi	r30, 0xEA	; 234
  3a:	fd e0       	ldi	r31, 0x0D	; 13
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a2 38       	cpi	r26, 0x82	; 130
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	21 e0       	ldi	r18, 0x01	; 1
  4a:	a2 e8       	ldi	r26, 0x82	; 130
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a9 38       	cpi	r26, 0x89	; 137
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	2d d1       	rcall	.+602    	; 0x2b4 <main>
  5a:	c5 c6       	rjmp	.+3466   	; 0xde6 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <rs485_init>:
	// BAUD= Fosc/(16*(UBBR+1))
	// UBRR= Fosc/(16*BAUD)-1
	//sei();
	// 16M / (16.0 * 4800) = 208.333 - 1 = 207, as in datasheet! 0.2% error for U2X = 0
	
	int ubr = (16000000UL * 1.0) / (16.0 * baudrate) - 1;
  5e:	e3 d2       	rcall	.+1478   	; 0x626 <__floatsisf>
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	30 e0       	ldi	r19, 0x00	; 0
  64:	40 e8       	ldi	r20, 0x80	; 128
  66:	51 e4       	ldi	r21, 0x41	; 65
  68:	6a d3       	rcall	.+1748   	; 0x73e <__mulsf3>
  6a:	9b 01       	movw	r18, r22
  6c:	ac 01       	movw	r20, r24
  6e:	60 e0       	ldi	r22, 0x00	; 0
  70:	74 e2       	ldi	r23, 0x24	; 36
  72:	84 e7       	ldi	r24, 0x74	; 116
  74:	9b e4       	ldi	r25, 0x4B	; 75
  76:	3c d2       	rcall	.+1144   	; 0x4f0 <__divsf3>
  78:	20 e0       	ldi	r18, 0x00	; 0
  7a:	30 e0       	ldi	r19, 0x00	; 0
  7c:	40 e8       	ldi	r20, 0x80	; 128
  7e:	5f e3       	ldi	r21, 0x3F	; 63
  80:	d2 d1       	rcall	.+932    	; 0x426 <__subsf3>
  82:	9e d2       	rcall	.+1340   	; 0x5c0 <__fixsfsi>

	UBRRH = (ubr >> 8);
  84:	70 bd       	out	0x20, r23	; 32
	UBRRL = ubr;
  86:	69 b9       	out	0x09, r22	; 9
	
	//UCSRA = 0;                 // Clear the UASRT status register
	UCSRB  = (1 <<  RXEN) | (1 << TXEN);     // Enable Receiver and Transmitter
  88:	88 e1       	ldi	r24, 0x18	; 24
  8a:	8a b9       	out	0x0a, r24	; 10
	UCSRB |= (1 << RXCIE);					// Enable RECV Interrupts
  8c:	57 9a       	sbi	0x0a, 7	; 10
	//UCSRB |= (1 << TXCIE);					// Enable RECV Interrupts
	UCSRC  = (1 << URSEL) | (1 << UCSZ1) | (1 << UCSZ0);   // Async-mode-8 bits
  8e:	86 e8       	ldi	r24, 0x86	; 134
  90:	80 bd       	out	0x20, r24	; 32
  92:	08 95       	ret

00000094 <USARTReadChar>:


char USARTReadChar()
{
	//Wait until a data is available
	while ((UCSRA & (1 << RXC)) == 0) {
  94:	5f 9b       	sbis	0x0b, 7	; 11
  96:	fe cf       	rjmp	.-4      	; 0x94 <USARTReadChar>
	}

	//Now USART has got data from host
	//and is available is buffer

	return UDR;
  98:	8c b1       	in	r24, 0x0c	; 12
}
  9a:	08 95       	ret

0000009c <USARTWriteChar>:


void USARTWriteChar(char data)
{
	//Wait until the transmitter is ready
	while(!(UCSRA & (1<<UDRE))) { /*Do nothing*/ }
  9c:	5d 9b       	sbis	0x0b, 5	; 11
  9e:	fe cf       	rjmp	.-4      	; 0x9c <USARTWriteChar>

	//Now write the data to USART buffer
	UDR = data;
  a0:	8c b9       	out	0x0c, r24	; 12
	
	// Wait to transmit byte
	while(!( UCSRA & (1 << TXC)));
  a2:	5e 9b       	sbis	0x0b, 6	; 11
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <USARTWriteChar+0x6>
	
	// Clear TXC bit
	//UCSRA &= ~(1 << TXC);
}
  a6:	08 95       	ret

000000a8 <rs485_send>:



void
rs485_send(char *p)
{
  a8:	0f 93       	push	r16
  aa:	1f 93       	push	r17
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
  b0:	fc 01       	movw	r30, r24
	//int next;
	cli();
  b2:	f8 94       	cli
	if (*p == '\0')
  b4:	80 81       	ld	r24, Z
  b6:	88 23       	and	r24, r24
  b8:	59 f0       	breq	.+22     	; 0xd0 <rs485_send+0x28>
	return;

	
	//while ((*p++ != '\0') && (*p++ != '\n') && (*p++ != '\r')) {
	while (*p++ != '\0') {
  ba:	ef 01       	movw	r28, r30
  bc:	21 96       	adiw	r28, 0x01	; 1
  be:	8e 01       	movw	r16, r28
		USARTWriteChar(*p);
  c0:	81 81       	ldd	r24, Z+1	; 0x01
  c2:	ec df       	rcall	.-40     	; 0x9c <USARTWriteChar>
  c4:	21 96       	adiw	r28, 0x01	; 1
	if (*p == '\0')
	return;

	
	//while ((*p++ != '\0') && (*p++ != '\n') && (*p++ != '\r')) {
	while (*p++ != '\0') {
  c6:	f8 01       	movw	r30, r16
  c8:	80 81       	ld	r24, Z
  ca:	81 11       	cpse	r24, r1
  cc:	f8 cf       	rjmp	.-16     	; 0xbe <rs485_send+0x16>
		USARTWriteChar(*p);
	}
	sei();
  ce:	78 94       	sei
}
  d0:	df 91       	pop	r29
  d2:	cf 91       	pop	r28
  d4:	1f 91       	pop	r17
  d6:	0f 91       	pop	r16
  d8:	08 95       	ret

000000da <set_transmit>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  da:	8f e1       	ldi	r24, 0x1F	; 31
  dc:	9e e4       	ldi	r25, 0x4E	; 78
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <set_transmit+0x4>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <set_transmit+0xa>
  e4:	00 00       	nop
}

void set_transmit() {
	//if (current_dir == 0) {
		_delay_us(usdelayt);
		if (PRT == PORT_D) {
  e6:	80 91 85 01 	lds	r24, 0x0185
  ea:	90 91 86 01 	lds	r25, 0x0186
  ee:	04 97       	sbiw	r24, 0x04	; 4
  f0:	69 f4       	brne	.+26     	; 0x10c <set_transmit+0x32>
			PORTD |= (1 << DDE);
  f2:	42 b3       	in	r20, 0x12	; 18
  f4:	21 e0       	ldi	r18, 0x01	; 1
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	c9 01       	movw	r24, r18
  fa:	00 90 87 01 	lds	r0, 0x0187
  fe:	02 c0       	rjmp	.+4      	; 0x104 <set_transmit+0x2a>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	0a 94       	dec	r0
 106:	e2 f7       	brpl	.-8      	; 0x100 <set_transmit+0x26>
 108:	84 2b       	or	r24, r20
 10a:	82 bb       	out	0x12, r24	; 18
		}
		current_dir = 1;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	90 93 84 01 	sts	0x0184, r25
 114:	80 93 83 01 	sts	0x0183, r24
 118:	8f e1       	ldi	r24, 0x1F	; 31
 11a:	9e e4       	ldi	r25, 0x4E	; 78
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <set_transmit+0x42>
 120:	00 c0       	rjmp	.+0      	; 0x122 <set_transmit+0x48>
 122:	00 00       	nop
 124:	08 95       	ret

00000126 <set_receive>:
}

void set_receive() {
	//if (current_dir == 1) {
		//_delay_us(usdelayr);
		if (PRT == PORT_D) {
 126:	80 91 85 01 	lds	r24, 0x0185
 12a:	90 91 86 01 	lds	r25, 0x0186
 12e:	04 97       	sbiw	r24, 0x04	; 4
 130:	71 f4       	brne	.+28     	; 0x14e <set_receive+0x28>
			PORTD &= ~(1 << DDE);
 132:	42 b3       	in	r20, 0x12	; 18
 134:	21 e0       	ldi	r18, 0x01	; 1
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	c9 01       	movw	r24, r18
 13a:	00 90 87 01 	lds	r0, 0x0187
 13e:	02 c0       	rjmp	.+4      	; 0x144 <set_receive+0x1e>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	0a 94       	dec	r0
 146:	e2 f7       	brpl	.-8      	; 0x140 <set_receive+0x1a>
 148:	80 95       	com	r24
 14a:	84 23       	and	r24, r20
 14c:	82 bb       	out	0x12, r24	; 18
 14e:	8f e8       	ldi	r24, 0x8F	; 143
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <set_receive+0x2c>
 156:	00 c0       	rjmp	.+0      	; 0x158 <set_receive+0x32>
 158:	00 00       	nop
		}
		_delay_us(usdelayr);
		current_dir = 0;
 15a:	10 92 84 01 	sts	0x0184, r1
 15e:	10 92 83 01 	sts	0x0183, r1
 162:	08 95       	ret

00000164 <__vector_11>:

// Interrupt for receiving data
char recv_buff[255] = { 0 };
volatile int n = 0;

ISR(USART_RXC_vect) {
 164:	1f 92       	push	r1
 166:	0f 92       	push	r0
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	0f 92       	push	r0
 16c:	11 24       	eor	r1, r1
 16e:	2f 93       	push	r18
 170:	3f 93       	push	r19
 172:	4f 93       	push	r20
 174:	5f 93       	push	r21
 176:	6f 93       	push	r22
 178:	7f 93       	push	r23
 17a:	8f 93       	push	r24
 17c:	9f 93       	push	r25
 17e:	af 93       	push	r26
 180:	bf 93       	push	r27
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	ef 93       	push	r30
 188:	ff 93       	push	r31
	// Code to be executed when the USART receives a byte here
	// Assume we are in receive mode - disable global interrupts
	cli();
 18a:	f8 94       	cli
	
	// Receive Char
	char received_byte = USARTReadChar();
 18c:	83 df       	rcall	.-250    	; 0x94 <USARTReadChar>

	// Reset buffer on margin
	if (n >= 254) { n = 0; memset(recv_buff, 0, 255); }
 18e:	20 91 82 00 	lds	r18, 0x0082
 192:	30 91 83 00 	lds	r19, 0x0083
 196:	2e 3f       	cpi	r18, 0xFE	; 254
 198:	31 05       	cpc	r19, r1
 19a:	5c f0       	brlt	.+22     	; 0x1b2 <__vector_11+0x4e>
 19c:	10 92 83 00 	sts	0x0083, r1
 1a0:	10 92 82 00 	sts	0x0082, r1
 1a4:	9f ef       	ldi	r25, 0xFF	; 255
 1a6:	e4 e8       	ldi	r30, 0x84	; 132
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	df 01       	movw	r26, r30
 1ac:	1d 92       	st	X+, r1
 1ae:	9a 95       	dec	r25
 1b0:	e9 f7       	brne	.-6      	; 0x1ac <__vector_11+0x48>

	// On newline reset buffer
	if ((received_byte == '\n') || (received_byte == '\r')) { n = 0; memset(recv_buff, 0, 255); }
 1b2:	8a 30       	cpi	r24, 0x0A	; 10
 1b4:	09 f4       	brne	.+2      	; 0x1b8 <__vector_11+0x54>
 1b6:	53 c0       	rjmp	.+166    	; 0x25e <__vector_11+0xfa>
 1b8:	8d 30       	cpi	r24, 0x0D	; 13
 1ba:	09 f0       	breq	.+2      	; 0x1be <__vector_11+0x5a>
 1bc:	4c c0       	rjmp	.+152    	; 0x256 <__vector_11+0xf2>
 1be:	5b c0       	rjmp	.+182    	; 0x276 <__vector_11+0x112>
		
	// Accept proper ascii or newline
	if ((received_byte >= 32) || (received_byte == '\r') || (received_byte == '\n')) {
		// Add to buffer
		if (received_byte >= 32)
			recv_buff[n++] = received_byte;
 1c0:	20 91 82 00 	lds	r18, 0x0082
 1c4:	30 91 83 00 	lds	r19, 0x0083
 1c8:	a9 01       	movw	r20, r18
 1ca:	4f 5f       	subi	r20, 0xFF	; 255
 1cc:	5f 4f       	sbci	r21, 0xFF	; 255
 1ce:	50 93 83 00 	sts	0x0083, r21
 1d2:	40 93 82 00 	sts	0x0082, r20
 1d6:	f9 01       	movw	r30, r18
 1d8:	ec 57       	subi	r30, 0x7C	; 124
 1da:	ff 4f       	sbci	r31, 0xFF	; 255
 1dc:	80 83       	st	Z, r24

		// Set to transmit
		PORTD |= (1 << DE);
 1de:	97 9a       	sbi	0x12, 7	; 18
 1e0:	ef e8       	ldi	r30, 0x8F	; 143
 1e2:	f1 e0       	ldi	r31, 0x01	; 1
 1e4:	31 97       	sbiw	r30, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <__vector_11+0x80>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <__vector_11+0x86>
 1ea:	00 00       	nop
		_delay_us(100); // for baud 250000 this seems to be needed
		
		// Retransmit
		USARTWriteChar(received_byte);
 1ec:	57 df       	rcall	.-338    	; 0x9c <USARTWriteChar>
 1ee:	8f e8       	ldi	r24, 0x8F	; 143
 1f0:	91 e0       	ldi	r25, 0x01	; 1
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <__vector_11+0x8e>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <__vector_11+0x94>
 1f8:	00 00       	nop
		_delay_us(100);
		// Transmit debugging information
		rs485_send("\r\r\nsent = ");
 1fa:	80 e6       	ldi	r24, 0x60	; 96
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	54 df       	rcall	.-344    	; 0xa8 <rs485_send>
		if (n >= 10) {
 200:	80 91 82 00 	lds	r24, 0x0082
 204:	90 91 83 00 	lds	r25, 0x0083
 208:	0a 97       	sbiw	r24, 0x0a	; 10
 20a:	a4 f0       	brlt	.+40     	; 0x234 <__vector_11+0xd0>
			USARTWriteChar((n/10)+48);
 20c:	80 91 82 00 	lds	r24, 0x0082
 210:	90 91 83 00 	lds	r25, 0x0083
 214:	ca e0       	ldi	r28, 0x0A	; 10
 216:	d0 e0       	ldi	r29, 0x00	; 0
 218:	be 01       	movw	r22, r28
 21a:	f4 d2       	rcall	.+1512   	; 0x804 <__divmodhi4>
 21c:	80 e3       	ldi	r24, 0x30	; 48
 21e:	86 0f       	add	r24, r22
 220:	3d df       	rcall	.-390    	; 0x9c <USARTWriteChar>
			USARTWriteChar((n%10)+48);
 222:	80 91 82 00 	lds	r24, 0x0082
 226:	90 91 83 00 	lds	r25, 0x0083
 22a:	be 01       	movw	r22, r28
 22c:	eb d2       	rcall	.+1494   	; 0x804 <__divmodhi4>
 22e:	80 5d       	subi	r24, 0xD0	; 208
 230:	35 df       	rcall	.-406    	; 0x9c <USARTWriteChar>
 232:	06 c0       	rjmp	.+12     	; 0x240 <__vector_11+0xdc>
		}
		else
			USARTWriteChar((char)(n+48));
 234:	80 91 82 00 	lds	r24, 0x0082
 238:	90 91 83 00 	lds	r25, 0x0083
 23c:	80 5d       	subi	r24, 0xD0	; 208
 23e:	2e df       	rcall	.-420    	; 0x9c <USARTWriteChar>
		rs485_send("\r\r\n");
 240:	8b e6       	ldi	r24, 0x6B	; 107
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	31 df       	rcall	.-414    	; 0xa8 <rs485_send>
 246:	af e8       	ldi	r26, 0x8F	; 143
 248:	b1 e0       	ldi	r27, 0x01	; 1
 24a:	11 97       	sbiw	r26, 0x01	; 1
 24c:	f1 f7       	brne	.-4      	; 0x24a <__vector_11+0xe6>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <__vector_11+0xec>
 250:	00 00       	nop
		_delay_us(100);
	}
	sei();
 252:	78 94       	sei
 254:	1c c0       	rjmp	.+56     	; 0x28e <__vector_11+0x12a>

	// On newline reset buffer
	if ((received_byte == '\n') || (received_byte == '\r')) { n = 0; memset(recv_buff, 0, 255); }
		
	// Accept proper ascii or newline
	if ((received_byte >= 32) || (received_byte == '\r') || (received_byte == '\n')) {
 256:	80 32       	cpi	r24, 0x20	; 32
 258:	08 f0       	brcs	.+2      	; 0x25c <__vector_11+0xf8>
 25a:	b2 cf       	rjmp	.-156    	; 0x1c0 <__vector_11+0x5c>
 25c:	fa cf       	rjmp	.-12     	; 0x252 <__vector_11+0xee>

	// Reset buffer on margin
	if (n >= 254) { n = 0; memset(recv_buff, 0, 255); }

	// On newline reset buffer
	if ((received_byte == '\n') || (received_byte == '\r')) { n = 0; memset(recv_buff, 0, 255); }
 25e:	10 92 83 00 	sts	0x0083, r1
 262:	10 92 82 00 	sts	0x0082, r1
 266:	9f ef       	ldi	r25, 0xFF	; 255
 268:	e4 e8       	ldi	r30, 0x84	; 132
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	df 01       	movw	r26, r30
 26e:	1d 92       	st	X+, r1
 270:	9a 95       	dec	r25
 272:	e9 f7       	brne	.-6      	; 0x26e <__vector_11+0x10a>
 274:	b4 cf       	rjmp	.-152    	; 0x1de <__vector_11+0x7a>
 276:	10 92 83 00 	sts	0x0083, r1
 27a:	10 92 82 00 	sts	0x0082, r1
 27e:	9f ef       	ldi	r25, 0xFF	; 255
 280:	e4 e8       	ldi	r30, 0x84	; 132
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	df 01       	movw	r26, r30
 286:	1d 92       	st	X+, r1
 288:	9a 95       	dec	r25
 28a:	e9 f7       	brne	.-6      	; 0x286 <__vector_11+0x122>
 28c:	a8 cf       	rjmp	.-176    	; 0x1de <__vector_11+0x7a>
		_delay_us(100);
	}
	sei();
	//set_receive();

}
 28e:	ff 91       	pop	r31
 290:	ef 91       	pop	r30
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	bf 91       	pop	r27
 298:	af 91       	pop	r26
 29a:	9f 91       	pop	r25
 29c:	8f 91       	pop	r24
 29e:	7f 91       	pop	r23
 2a0:	6f 91       	pop	r22
 2a2:	5f 91       	pop	r21
 2a4:	4f 91       	pop	r20
 2a6:	3f 91       	pop	r19
 2a8:	2f 91       	pop	r18
 2aa:	0f 90       	pop	r0
 2ac:	0f be       	out	0x3f, r0	; 63
 2ae:	0f 90       	pop	r0
 2b0:	1f 90       	pop	r1
 2b2:	18 95       	reti

000002b4 <main>:

int main(void)
{
 2b4:	cf 93       	push	r28
 2b6:	df 93       	push	r29
 2b8:	cd b7       	in	r28, 0x3d	; 61
 2ba:	de b7       	in	r29, 0x3e	; 62
 2bc:	cd 51       	subi	r28, 0x1D	; 29
 2be:	d1 40       	sbci	r29, 0x01	; 1
 2c0:	0f b6       	in	r0, 0x3f	; 63
 2c2:	f8 94       	cli
 2c4:	de bf       	out	0x3e, r29	; 62
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	cd bf       	out	0x3d, r28	; 61
	/* Initialize buttons and LED */
	DDRB |=  (1 << LED1); // Setare ca output, LED
 2ca:	b8 9a       	sbi	0x17, 0	; 23
	DDRB &= ~(1 << BUTTON1); // setare ca input, BTN1
 2cc:	b9 98       	cbi	0x17, 1	; 23
	DDRD |=  (1 << DE); // Setare ca output, DE, control directie seriala
 2ce:	8f 9a       	sbi	0x11, 7	; 17
int current_dir = 0;
const int usdelayt = 5000;
const int usdelayr = 100;

void set_pins(int Port, int Dir) {
	PRT = Port;
 2d0:	84 e0       	ldi	r24, 0x04	; 4
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	90 93 86 01 	sts	0x0186, r25
 2d8:	80 93 85 01 	sts	0x0185, r24
	DDE = Dir;
 2dc:	87 e0       	ldi	r24, 0x07	; 7
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	90 93 88 01 	sts	0x0188, r25
 2e4:	80 93 87 01 	sts	0x0187, r24
	
	set_pins(PORT_D, DE);
	
	/* Initialize RS-485 driver*/
	//rs485_init(4800);
	rs485_init(250000); // putty seems to work with XON/XOFF
 2e8:	60 e9       	ldi	r22, 0x90	; 144
 2ea:	70 ed       	ldi	r23, 0xD0	; 208
 2ec:	83 e0       	ldi	r24, 0x03	; 3
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	b6 de       	rcall	.-660    	; 0x5e <rs485_init>
	sei();
 2f2:	78 94       	sei

	set_receive();
 2f4:	18 df       	rcall	.-464    	; 0x126 <set_receive>
 2f6:	8f ec       	ldi	r24, 0xCF	; 207
 2f8:	97 e0       	ldi	r25, 0x07	; 7
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <main+0x46>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x4c>
 300:	00 00       	nop
	_delay_us(500) ;
	
	char str[10];
	char buffer[275];
	int i = 0;
	long int j = 0;
 302:	21 2c       	mov	r2, r1
 304:	31 2c       	mov	r3, r1
 306:	21 01       	movw	r4, r2
	//PORTD &= ~(1 << DE);
	_delay_us(500) ;
	
	char str[10];
	char buffer[275];
	int i = 0;
 308:	c1 2c       	mov	r12, r1
 30a:	d1 2c       	mov	r13, r1
			// Trimit mesaj - regiune atomica - nu permite intreruperi
			PORTB &= ~(1 << LED1);
			
			_delay_us(100);
			
			memset(buffer, 0, 275);
 30c:	8e 01       	movw	r16, r28
 30e:	05 5f       	subi	r16, 0xF5	; 245
 310:	1f 4f       	sbci	r17, 0xFF	; 255
			memset(str, 0, 10);
 312:	fe 01       	movw	r30, r28
 314:	31 96       	adiw	r30, 0x01	; 1
 316:	7f 01       	movw	r14, r30
			sprintf(str, "%d", i);
 318:	0f 2e       	mov	r0, r31
 31a:	ff e6       	ldi	r31, 0x6F	; 111
 31c:	af 2e       	mov	r10, r31
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	bf 2e       	mov	r11, r31
 322:	f0 2d       	mov	r31, r0
			strcpy(buffer, " [ i = ");
 324:	68 94       	set
 326:	99 24       	eor	r9, r9
 328:	93 f8       	bld	r9, 3
			strcat(buffer, str);
			strcat(buffer, " ] >> ");
			
			cli();
			strcat(buffer, recv_buff);
			strcat(buffer, "\r\n");
 32a:	0f 2e       	mov	r0, r31
 32c:	fd e0       	ldi	r31, 0x0D	; 13
 32e:	6f 2e       	mov	r6, r31
 330:	fa e0       	ldi	r31, 0x0A	; 10
 332:	7f 2e       	mov	r7, r31
 334:	81 2c       	mov	r8, r1
 336:	f0 2d       	mov	r31, r0
	long int j = 0;

    while(1)
    {
		// ISR reception active
		if (j < 5000) j++; else j = 0;
 338:	f8 e8       	ldi	r31, 0x88	; 136
 33a:	2f 16       	cp	r2, r31
 33c:	f3 e1       	ldi	r31, 0x13	; 19
 33e:	3f 06       	cpc	r3, r31
 340:	41 04       	cpc	r4, r1
 342:	51 04       	cpc	r5, r1
 344:	5c f4       	brge	.+22     	; 0x35c <main+0xa8>
 346:	8f ef       	ldi	r24, 0xFF	; 255
 348:	28 1a       	sub	r2, r24
 34a:	38 0a       	sbc	r3, r24
 34c:	48 0a       	sbc	r4, r24
 34e:	58 0a       	sbc	r5, r24

		//if ((PINB & (1 << BUTTON1)) == 0) { 
		if (j == 0) { 
 350:	21 14       	cp	r2, r1
 352:	31 04       	cpc	r3, r1
 354:	41 04       	cpc	r4, r1
 356:	51 04       	cpc	r5, r1
 358:	09 f0       	breq	.+2      	; 0x35c <main+0xa8>
 35a:	62 c0       	rjmp	.+196    	; 0x420 <main+0x16c>
			// Trimit mesaj - regiune atomica - nu permite intreruperi
			PORTB &= ~(1 << LED1);
 35c:	c0 98       	cbi	0x18, 0	; 24
 35e:	ef e8       	ldi	r30, 0x8F	; 143
 360:	f1 e0       	ldi	r31, 0x01	; 1
 362:	31 97       	sbiw	r30, 0x01	; 1
 364:	f1 f7       	brne	.-4      	; 0x362 <main+0xae>
 366:	00 c0       	rjmp	.+0      	; 0x368 <main+0xb4>
 368:	00 00       	nop
			
			_delay_us(100);
			
			memset(buffer, 0, 275);
 36a:	f8 01       	movw	r30, r16
 36c:	83 e1       	ldi	r24, 0x13	; 19
 36e:	91 e0       	ldi	r25, 0x01	; 1
 370:	11 92       	st	Z+, r1
 372:	01 97       	sbiw	r24, 0x01	; 1
 374:	e9 f7       	brne	.-6      	; 0x370 <main+0xbc>
			memset(str, 0, 10);
 376:	f7 01       	movw	r30, r14
 378:	8a e0       	ldi	r24, 0x0A	; 10
 37a:	11 92       	st	Z+, r1
 37c:	8a 95       	dec	r24
 37e:	e9 f7       	brne	.-6      	; 0x37a <main+0xc6>
			sprintf(str, "%d", i);
 380:	df 92       	push	r13
 382:	cf 92       	push	r12
 384:	bf 92       	push	r11
 386:	af 92       	push	r10
 388:	ff 92       	push	r15
 38a:	ef 92       	push	r14
 38c:	6d d2       	rcall	.+1242   	; 0x868 <sprintf>
			strcpy(buffer, " [ i = ");
 38e:	e2 e7       	ldi	r30, 0x72	; 114
 390:	f0 e0       	ldi	r31, 0x00	; 0
 392:	d8 01       	movw	r26, r16
 394:	89 2d       	mov	r24, r9
 396:	01 90       	ld	r0, Z+
 398:	0d 92       	st	X+, r0
 39a:	8a 95       	dec	r24
 39c:	e1 f7       	brne	.-8      	; 0x396 <main+0xe2>
			strcat(buffer, str);
 39e:	b7 01       	movw	r22, r14
 3a0:	c8 01       	movw	r24, r16
 3a2:	57 d2       	rcall	.+1198   	; 0x852 <strcat>
			strcat(buffer, " ] >> ");
 3a4:	d8 01       	movw	r26, r16
 3a6:	0d 90       	ld	r0, X+
 3a8:	00 20       	and	r0, r0
 3aa:	e9 f7       	brne	.-6      	; 0x3a6 <main+0xf2>
 3ac:	11 97       	sbiw	r26, 0x01	; 1
 3ae:	ea e7       	ldi	r30, 0x7A	; 122
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	87 e0       	ldi	r24, 0x07	; 7
 3b4:	01 90       	ld	r0, Z+
 3b6:	0d 92       	st	X+, r0
 3b8:	8a 95       	dec	r24
 3ba:	e1 f7       	brne	.-8      	; 0x3b4 <main+0x100>
			
			cli();
 3bc:	f8 94       	cli
			strcat(buffer, recv_buff);
 3be:	64 e8       	ldi	r22, 0x84	; 132
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	c8 01       	movw	r24, r16
 3c4:	46 d2       	rcall	.+1164   	; 0x852 <strcat>
			strcat(buffer, "\r\n");
 3c6:	f8 01       	movw	r30, r16
 3c8:	01 90       	ld	r0, Z+
 3ca:	00 20       	and	r0, r0
 3cc:	e9 f7       	brne	.-6      	; 0x3c8 <main+0x114>
 3ce:	31 97       	sbiw	r30, 0x01	; 1
 3d0:	60 82       	st	Z, r6
 3d2:	71 82       	std	Z+1, r7	; 0x01
 3d4:	82 82       	std	Z+2, r8	; 0x02
 3d6:	ef e8       	ldi	r30, 0x8F	; 143
 3d8:	f1 e0       	ldi	r31, 0x01	; 1
 3da:	31 97       	sbiw	r30, 0x01	; 1
 3dc:	f1 f7       	brne	.-4      	; 0x3da <main+0x126>
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <main+0x12c>
 3e0:	00 00       	nop
			
			//_delay_ms(1);
			_delay_us(100);
			set_transmit();
 3e2:	7b de       	rcall	.-778    	; 0xda <set_transmit>
 3e4:	8f e8       	ldi	r24, 0x8F	; 143
 3e6:	91 e0       	ldi	r25, 0x01	; 1
 3e8:	01 97       	sbiw	r24, 0x01	; 1
 3ea:	f1 f7       	brne	.-4      	; 0x3e8 <main+0x134>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <main+0x13a>
 3ee:	00 00       	nop
			//_delay_ms(1);
			_delay_us(100);
			
			rs485_send(buffer);
 3f0:	c8 01       	movw	r24, r16
 3f2:	5a de       	rcall	.-844    	; 0xa8 <rs485_send>
 3f4:	ef e8       	ldi	r30, 0x8F	; 143
 3f6:	f1 e0       	ldi	r31, 0x01	; 1
 3f8:	31 97       	sbiw	r30, 0x01	; 1
 3fa:	f1 f7       	brne	.-4      	; 0x3f8 <main+0x144>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <main+0x14a>
 3fe:	00 00       	nop
			_delay_us(100);
			
			set_receive();
 400:	92 de       	rcall	.-732    	; 0x126 <set_receive>
			sei();
 402:	78 94       	sei
			
			i++;
 404:	ff ef       	ldi	r31, 0xFF	; 255
 406:	cf 1a       	sub	r12, r31
 408:	df 0a       	sbc	r13, r31
 40a:	0f 90       	pop	r0
 40c:	0f 90       	pop	r0
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	21 2c       	mov	r2, r1
 418:	31 2c       	mov	r3, r1
 41a:	41 2c       	mov	r4, r1
 41c:	51 2c       	mov	r5, r1
 41e:	8c cf       	rjmp	.-232    	; 0x338 <main+0x84>
		}
		else {
			PORTB |= (1 << LED1);
 420:	c0 9a       	sbi	0x18, 0	; 24

			// Must continually set pin?
			set_receive();
 422:	81 de       	rcall	.-766    	; 0x126 <set_receive>
 424:	89 cf       	rjmp	.-238    	; 0x338 <main+0x84>

00000426 <__subsf3>:
 426:	50 58       	subi	r21, 0x80	; 128

00000428 <__addsf3>:
 428:	bb 27       	eor	r27, r27
 42a:	aa 27       	eor	r26, r26
 42c:	0e d0       	rcall	.+28     	; 0x44a <__addsf3x>
 42e:	4d c1       	rjmp	.+666    	; 0x6ca <__fp_round>
 430:	3e d1       	rcall	.+636    	; 0x6ae <__fp_pscA>
 432:	30 f0       	brcs	.+12     	; 0x440 <__addsf3+0x18>
 434:	43 d1       	rcall	.+646    	; 0x6bc <__fp_pscB>
 436:	20 f0       	brcs	.+8      	; 0x440 <__addsf3+0x18>
 438:	31 f4       	brne	.+12     	; 0x446 <__addsf3+0x1e>
 43a:	9f 3f       	cpi	r25, 0xFF	; 255
 43c:	11 f4       	brne	.+4      	; 0x442 <__addsf3+0x1a>
 43e:	1e f4       	brtc	.+6      	; 0x446 <__addsf3+0x1e>
 440:	33 c1       	rjmp	.+614    	; 0x6a8 <__fp_nan>
 442:	0e f4       	brtc	.+2      	; 0x446 <__addsf3+0x1e>
 444:	e0 95       	com	r30
 446:	e7 fb       	bst	r30, 7
 448:	29 c1       	rjmp	.+594    	; 0x69c <__fp_inf>

0000044a <__addsf3x>:
 44a:	e9 2f       	mov	r30, r25
 44c:	4f d1       	rcall	.+670    	; 0x6ec <__fp_split3>
 44e:	80 f3       	brcs	.-32     	; 0x430 <__addsf3+0x8>
 450:	ba 17       	cp	r27, r26
 452:	62 07       	cpc	r22, r18
 454:	73 07       	cpc	r23, r19
 456:	84 07       	cpc	r24, r20
 458:	95 07       	cpc	r25, r21
 45a:	18 f0       	brcs	.+6      	; 0x462 <__stack+0x3>
 45c:	71 f4       	brne	.+28     	; 0x47a <__stack+0x1b>
 45e:	9e f5       	brtc	.+102    	; 0x4c6 <__stack+0x67>
 460:	67 c1       	rjmp	.+718    	; 0x730 <__fp_zero>
 462:	0e f4       	brtc	.+2      	; 0x466 <__stack+0x7>
 464:	e0 95       	com	r30
 466:	0b 2e       	mov	r0, r27
 468:	ba 2f       	mov	r27, r26
 46a:	a0 2d       	mov	r26, r0
 46c:	0b 01       	movw	r0, r22
 46e:	b9 01       	movw	r22, r18
 470:	90 01       	movw	r18, r0
 472:	0c 01       	movw	r0, r24
 474:	ca 01       	movw	r24, r20
 476:	a0 01       	movw	r20, r0
 478:	11 24       	eor	r1, r1
 47a:	ff 27       	eor	r31, r31
 47c:	59 1b       	sub	r21, r25
 47e:	99 f0       	breq	.+38     	; 0x4a6 <__stack+0x47>
 480:	59 3f       	cpi	r21, 0xF9	; 249
 482:	50 f4       	brcc	.+20     	; 0x498 <__stack+0x39>
 484:	50 3e       	cpi	r21, 0xE0	; 224
 486:	68 f1       	brcs	.+90     	; 0x4e2 <__stack+0x83>
 488:	1a 16       	cp	r1, r26
 48a:	f0 40       	sbci	r31, 0x00	; 0
 48c:	a2 2f       	mov	r26, r18
 48e:	23 2f       	mov	r18, r19
 490:	34 2f       	mov	r19, r20
 492:	44 27       	eor	r20, r20
 494:	58 5f       	subi	r21, 0xF8	; 248
 496:	f3 cf       	rjmp	.-26     	; 0x47e <__stack+0x1f>
 498:	46 95       	lsr	r20
 49a:	37 95       	ror	r19
 49c:	27 95       	ror	r18
 49e:	a7 95       	ror	r26
 4a0:	f0 40       	sbci	r31, 0x00	; 0
 4a2:	53 95       	inc	r21
 4a4:	c9 f7       	brne	.-14     	; 0x498 <__stack+0x39>
 4a6:	7e f4       	brtc	.+30     	; 0x4c6 <__stack+0x67>
 4a8:	1f 16       	cp	r1, r31
 4aa:	ba 0b       	sbc	r27, r26
 4ac:	62 0b       	sbc	r22, r18
 4ae:	73 0b       	sbc	r23, r19
 4b0:	84 0b       	sbc	r24, r20
 4b2:	ba f0       	brmi	.+46     	; 0x4e2 <__stack+0x83>
 4b4:	91 50       	subi	r25, 0x01	; 1
 4b6:	a1 f0       	breq	.+40     	; 0x4e0 <__stack+0x81>
 4b8:	ff 0f       	add	r31, r31
 4ba:	bb 1f       	adc	r27, r27
 4bc:	66 1f       	adc	r22, r22
 4be:	77 1f       	adc	r23, r23
 4c0:	88 1f       	adc	r24, r24
 4c2:	c2 f7       	brpl	.-16     	; 0x4b4 <__stack+0x55>
 4c4:	0e c0       	rjmp	.+28     	; 0x4e2 <__stack+0x83>
 4c6:	ba 0f       	add	r27, r26
 4c8:	62 1f       	adc	r22, r18
 4ca:	73 1f       	adc	r23, r19
 4cc:	84 1f       	adc	r24, r20
 4ce:	48 f4       	brcc	.+18     	; 0x4e2 <__stack+0x83>
 4d0:	87 95       	ror	r24
 4d2:	77 95       	ror	r23
 4d4:	67 95       	ror	r22
 4d6:	b7 95       	ror	r27
 4d8:	f7 95       	ror	r31
 4da:	9e 3f       	cpi	r25, 0xFE	; 254
 4dc:	08 f0       	brcs	.+2      	; 0x4e0 <__stack+0x81>
 4de:	b3 cf       	rjmp	.-154    	; 0x446 <__addsf3+0x1e>
 4e0:	93 95       	inc	r25
 4e2:	88 0f       	add	r24, r24
 4e4:	08 f0       	brcs	.+2      	; 0x4e8 <__stack+0x89>
 4e6:	99 27       	eor	r25, r25
 4e8:	ee 0f       	add	r30, r30
 4ea:	97 95       	ror	r25
 4ec:	87 95       	ror	r24
 4ee:	08 95       	ret

000004f0 <__divsf3>:
 4f0:	0c d0       	rcall	.+24     	; 0x50a <__divsf3x>
 4f2:	eb c0       	rjmp	.+470    	; 0x6ca <__fp_round>
 4f4:	e3 d0       	rcall	.+454    	; 0x6bc <__fp_pscB>
 4f6:	40 f0       	brcs	.+16     	; 0x508 <__divsf3+0x18>
 4f8:	da d0       	rcall	.+436    	; 0x6ae <__fp_pscA>
 4fa:	30 f0       	brcs	.+12     	; 0x508 <__divsf3+0x18>
 4fc:	21 f4       	brne	.+8      	; 0x506 <__divsf3+0x16>
 4fe:	5f 3f       	cpi	r21, 0xFF	; 255
 500:	19 f0       	breq	.+6      	; 0x508 <__divsf3+0x18>
 502:	cc c0       	rjmp	.+408    	; 0x69c <__fp_inf>
 504:	51 11       	cpse	r21, r1
 506:	15 c1       	rjmp	.+554    	; 0x732 <__fp_szero>
 508:	cf c0       	rjmp	.+414    	; 0x6a8 <__fp_nan>

0000050a <__divsf3x>:
 50a:	f0 d0       	rcall	.+480    	; 0x6ec <__fp_split3>
 50c:	98 f3       	brcs	.-26     	; 0x4f4 <__divsf3+0x4>

0000050e <__divsf3_pse>:
 50e:	99 23       	and	r25, r25
 510:	c9 f3       	breq	.-14     	; 0x504 <__divsf3+0x14>
 512:	55 23       	and	r21, r21
 514:	b1 f3       	breq	.-20     	; 0x502 <__divsf3+0x12>
 516:	95 1b       	sub	r25, r21
 518:	55 0b       	sbc	r21, r21
 51a:	bb 27       	eor	r27, r27
 51c:	aa 27       	eor	r26, r26
 51e:	62 17       	cp	r22, r18
 520:	73 07       	cpc	r23, r19
 522:	84 07       	cpc	r24, r20
 524:	38 f0       	brcs	.+14     	; 0x534 <__divsf3_pse+0x26>
 526:	9f 5f       	subi	r25, 0xFF	; 255
 528:	5f 4f       	sbci	r21, 0xFF	; 255
 52a:	22 0f       	add	r18, r18
 52c:	33 1f       	adc	r19, r19
 52e:	44 1f       	adc	r20, r20
 530:	aa 1f       	adc	r26, r26
 532:	a9 f3       	breq	.-22     	; 0x51e <__divsf3_pse+0x10>
 534:	33 d0       	rcall	.+102    	; 0x59c <__divsf3_pse+0x8e>
 536:	0e 2e       	mov	r0, r30
 538:	3a f0       	brmi	.+14     	; 0x548 <__divsf3_pse+0x3a>
 53a:	e0 e8       	ldi	r30, 0x80	; 128
 53c:	30 d0       	rcall	.+96     	; 0x59e <__divsf3_pse+0x90>
 53e:	91 50       	subi	r25, 0x01	; 1
 540:	50 40       	sbci	r21, 0x00	; 0
 542:	e6 95       	lsr	r30
 544:	00 1c       	adc	r0, r0
 546:	ca f7       	brpl	.-14     	; 0x53a <__divsf3_pse+0x2c>
 548:	29 d0       	rcall	.+82     	; 0x59c <__divsf3_pse+0x8e>
 54a:	fe 2f       	mov	r31, r30
 54c:	27 d0       	rcall	.+78     	; 0x59c <__divsf3_pse+0x8e>
 54e:	66 0f       	add	r22, r22
 550:	77 1f       	adc	r23, r23
 552:	88 1f       	adc	r24, r24
 554:	bb 1f       	adc	r27, r27
 556:	26 17       	cp	r18, r22
 558:	37 07       	cpc	r19, r23
 55a:	48 07       	cpc	r20, r24
 55c:	ab 07       	cpc	r26, r27
 55e:	b0 e8       	ldi	r27, 0x80	; 128
 560:	09 f0       	breq	.+2      	; 0x564 <__divsf3_pse+0x56>
 562:	bb 0b       	sbc	r27, r27
 564:	80 2d       	mov	r24, r0
 566:	bf 01       	movw	r22, r30
 568:	ff 27       	eor	r31, r31
 56a:	93 58       	subi	r25, 0x83	; 131
 56c:	5f 4f       	sbci	r21, 0xFF	; 255
 56e:	2a f0       	brmi	.+10     	; 0x57a <__divsf3_pse+0x6c>
 570:	9e 3f       	cpi	r25, 0xFE	; 254
 572:	51 05       	cpc	r21, r1
 574:	68 f0       	brcs	.+26     	; 0x590 <__divsf3_pse+0x82>
 576:	92 c0       	rjmp	.+292    	; 0x69c <__fp_inf>
 578:	dc c0       	rjmp	.+440    	; 0x732 <__fp_szero>
 57a:	5f 3f       	cpi	r21, 0xFF	; 255
 57c:	ec f3       	brlt	.-6      	; 0x578 <__divsf3_pse+0x6a>
 57e:	98 3e       	cpi	r25, 0xE8	; 232
 580:	dc f3       	brlt	.-10     	; 0x578 <__divsf3_pse+0x6a>
 582:	86 95       	lsr	r24
 584:	77 95       	ror	r23
 586:	67 95       	ror	r22
 588:	b7 95       	ror	r27
 58a:	f7 95       	ror	r31
 58c:	9f 5f       	subi	r25, 0xFF	; 255
 58e:	c9 f7       	brne	.-14     	; 0x582 <__divsf3_pse+0x74>
 590:	88 0f       	add	r24, r24
 592:	91 1d       	adc	r25, r1
 594:	96 95       	lsr	r25
 596:	87 95       	ror	r24
 598:	97 f9       	bld	r25, 7
 59a:	08 95       	ret
 59c:	e1 e0       	ldi	r30, 0x01	; 1
 59e:	66 0f       	add	r22, r22
 5a0:	77 1f       	adc	r23, r23
 5a2:	88 1f       	adc	r24, r24
 5a4:	bb 1f       	adc	r27, r27
 5a6:	62 17       	cp	r22, r18
 5a8:	73 07       	cpc	r23, r19
 5aa:	84 07       	cpc	r24, r20
 5ac:	ba 07       	cpc	r27, r26
 5ae:	20 f0       	brcs	.+8      	; 0x5b8 <__divsf3_pse+0xaa>
 5b0:	62 1b       	sub	r22, r18
 5b2:	73 0b       	sbc	r23, r19
 5b4:	84 0b       	sbc	r24, r20
 5b6:	ba 0b       	sbc	r27, r26
 5b8:	ee 1f       	adc	r30, r30
 5ba:	88 f7       	brcc	.-30     	; 0x59e <__divsf3_pse+0x90>
 5bc:	e0 95       	com	r30
 5be:	08 95       	ret

000005c0 <__fixsfsi>:
 5c0:	04 d0       	rcall	.+8      	; 0x5ca <__fixunssfsi>
 5c2:	68 94       	set
 5c4:	b1 11       	cpse	r27, r1
 5c6:	b5 c0       	rjmp	.+362    	; 0x732 <__fp_szero>
 5c8:	08 95       	ret

000005ca <__fixunssfsi>:
 5ca:	98 d0       	rcall	.+304    	; 0x6fc <__fp_splitA>
 5cc:	88 f0       	brcs	.+34     	; 0x5f0 <__fixunssfsi+0x26>
 5ce:	9f 57       	subi	r25, 0x7F	; 127
 5d0:	90 f0       	brcs	.+36     	; 0x5f6 <__fixunssfsi+0x2c>
 5d2:	b9 2f       	mov	r27, r25
 5d4:	99 27       	eor	r25, r25
 5d6:	b7 51       	subi	r27, 0x17	; 23
 5d8:	a0 f0       	brcs	.+40     	; 0x602 <__fixunssfsi+0x38>
 5da:	d1 f0       	breq	.+52     	; 0x610 <__fixunssfsi+0x46>
 5dc:	66 0f       	add	r22, r22
 5de:	77 1f       	adc	r23, r23
 5e0:	88 1f       	adc	r24, r24
 5e2:	99 1f       	adc	r25, r25
 5e4:	1a f0       	brmi	.+6      	; 0x5ec <__fixunssfsi+0x22>
 5e6:	ba 95       	dec	r27
 5e8:	c9 f7       	brne	.-14     	; 0x5dc <__fixunssfsi+0x12>
 5ea:	12 c0       	rjmp	.+36     	; 0x610 <__fixunssfsi+0x46>
 5ec:	b1 30       	cpi	r27, 0x01	; 1
 5ee:	81 f0       	breq	.+32     	; 0x610 <__fixunssfsi+0x46>
 5f0:	9f d0       	rcall	.+318    	; 0x730 <__fp_zero>
 5f2:	b1 e0       	ldi	r27, 0x01	; 1
 5f4:	08 95       	ret
 5f6:	9c c0       	rjmp	.+312    	; 0x730 <__fp_zero>
 5f8:	67 2f       	mov	r22, r23
 5fa:	78 2f       	mov	r23, r24
 5fc:	88 27       	eor	r24, r24
 5fe:	b8 5f       	subi	r27, 0xF8	; 248
 600:	39 f0       	breq	.+14     	; 0x610 <__fixunssfsi+0x46>
 602:	b9 3f       	cpi	r27, 0xF9	; 249
 604:	cc f3       	brlt	.-14     	; 0x5f8 <__fixunssfsi+0x2e>
 606:	86 95       	lsr	r24
 608:	77 95       	ror	r23
 60a:	67 95       	ror	r22
 60c:	b3 95       	inc	r27
 60e:	d9 f7       	brne	.-10     	; 0x606 <__fixunssfsi+0x3c>
 610:	3e f4       	brtc	.+14     	; 0x620 <__fixunssfsi+0x56>
 612:	90 95       	com	r25
 614:	80 95       	com	r24
 616:	70 95       	com	r23
 618:	61 95       	neg	r22
 61a:	7f 4f       	sbci	r23, 0xFF	; 255
 61c:	8f 4f       	sbci	r24, 0xFF	; 255
 61e:	9f 4f       	sbci	r25, 0xFF	; 255
 620:	08 95       	ret

00000622 <__floatunsisf>:
 622:	e8 94       	clt
 624:	09 c0       	rjmp	.+18     	; 0x638 <__floatsisf+0x12>

00000626 <__floatsisf>:
 626:	97 fb       	bst	r25, 7
 628:	3e f4       	brtc	.+14     	; 0x638 <__floatsisf+0x12>
 62a:	90 95       	com	r25
 62c:	80 95       	com	r24
 62e:	70 95       	com	r23
 630:	61 95       	neg	r22
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	99 23       	and	r25, r25
 63a:	a9 f0       	breq	.+42     	; 0x666 <__floatsisf+0x40>
 63c:	f9 2f       	mov	r31, r25
 63e:	96 e9       	ldi	r25, 0x96	; 150
 640:	bb 27       	eor	r27, r27
 642:	93 95       	inc	r25
 644:	f6 95       	lsr	r31
 646:	87 95       	ror	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	b7 95       	ror	r27
 64e:	f1 11       	cpse	r31, r1
 650:	f8 cf       	rjmp	.-16     	; 0x642 <__floatsisf+0x1c>
 652:	fa f4       	brpl	.+62     	; 0x692 <__floatsisf+0x6c>
 654:	bb 0f       	add	r27, r27
 656:	11 f4       	brne	.+4      	; 0x65c <__floatsisf+0x36>
 658:	60 ff       	sbrs	r22, 0
 65a:	1b c0       	rjmp	.+54     	; 0x692 <__floatsisf+0x6c>
 65c:	6f 5f       	subi	r22, 0xFF	; 255
 65e:	7f 4f       	sbci	r23, 0xFF	; 255
 660:	8f 4f       	sbci	r24, 0xFF	; 255
 662:	9f 4f       	sbci	r25, 0xFF	; 255
 664:	16 c0       	rjmp	.+44     	; 0x692 <__floatsisf+0x6c>
 666:	88 23       	and	r24, r24
 668:	11 f0       	breq	.+4      	; 0x66e <__floatsisf+0x48>
 66a:	96 e9       	ldi	r25, 0x96	; 150
 66c:	11 c0       	rjmp	.+34     	; 0x690 <__floatsisf+0x6a>
 66e:	77 23       	and	r23, r23
 670:	21 f0       	breq	.+8      	; 0x67a <__floatsisf+0x54>
 672:	9e e8       	ldi	r25, 0x8E	; 142
 674:	87 2f       	mov	r24, r23
 676:	76 2f       	mov	r23, r22
 678:	05 c0       	rjmp	.+10     	; 0x684 <__floatsisf+0x5e>
 67a:	66 23       	and	r22, r22
 67c:	71 f0       	breq	.+28     	; 0x69a <__floatsisf+0x74>
 67e:	96 e8       	ldi	r25, 0x86	; 134
 680:	86 2f       	mov	r24, r22
 682:	70 e0       	ldi	r23, 0x00	; 0
 684:	60 e0       	ldi	r22, 0x00	; 0
 686:	2a f0       	brmi	.+10     	; 0x692 <__floatsisf+0x6c>
 688:	9a 95       	dec	r25
 68a:	66 0f       	add	r22, r22
 68c:	77 1f       	adc	r23, r23
 68e:	88 1f       	adc	r24, r24
 690:	da f7       	brpl	.-10     	; 0x688 <__floatsisf+0x62>
 692:	88 0f       	add	r24, r24
 694:	96 95       	lsr	r25
 696:	87 95       	ror	r24
 698:	97 f9       	bld	r25, 7
 69a:	08 95       	ret

0000069c <__fp_inf>:
 69c:	97 f9       	bld	r25, 7
 69e:	9f 67       	ori	r25, 0x7F	; 127
 6a0:	80 e8       	ldi	r24, 0x80	; 128
 6a2:	70 e0       	ldi	r23, 0x00	; 0
 6a4:	60 e0       	ldi	r22, 0x00	; 0
 6a6:	08 95       	ret

000006a8 <__fp_nan>:
 6a8:	9f ef       	ldi	r25, 0xFF	; 255
 6aa:	80 ec       	ldi	r24, 0xC0	; 192
 6ac:	08 95       	ret

000006ae <__fp_pscA>:
 6ae:	00 24       	eor	r0, r0
 6b0:	0a 94       	dec	r0
 6b2:	16 16       	cp	r1, r22
 6b4:	17 06       	cpc	r1, r23
 6b6:	18 06       	cpc	r1, r24
 6b8:	09 06       	cpc	r0, r25
 6ba:	08 95       	ret

000006bc <__fp_pscB>:
 6bc:	00 24       	eor	r0, r0
 6be:	0a 94       	dec	r0
 6c0:	12 16       	cp	r1, r18
 6c2:	13 06       	cpc	r1, r19
 6c4:	14 06       	cpc	r1, r20
 6c6:	05 06       	cpc	r0, r21
 6c8:	08 95       	ret

000006ca <__fp_round>:
 6ca:	09 2e       	mov	r0, r25
 6cc:	03 94       	inc	r0
 6ce:	00 0c       	add	r0, r0
 6d0:	11 f4       	brne	.+4      	; 0x6d6 <__fp_round+0xc>
 6d2:	88 23       	and	r24, r24
 6d4:	52 f0       	brmi	.+20     	; 0x6ea <__fp_round+0x20>
 6d6:	bb 0f       	add	r27, r27
 6d8:	40 f4       	brcc	.+16     	; 0x6ea <__fp_round+0x20>
 6da:	bf 2b       	or	r27, r31
 6dc:	11 f4       	brne	.+4      	; 0x6e2 <__fp_round+0x18>
 6de:	60 ff       	sbrs	r22, 0
 6e0:	04 c0       	rjmp	.+8      	; 0x6ea <__fp_round+0x20>
 6e2:	6f 5f       	subi	r22, 0xFF	; 255
 6e4:	7f 4f       	sbci	r23, 0xFF	; 255
 6e6:	8f 4f       	sbci	r24, 0xFF	; 255
 6e8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ea:	08 95       	ret

000006ec <__fp_split3>:
 6ec:	57 fd       	sbrc	r21, 7
 6ee:	90 58       	subi	r25, 0x80	; 128
 6f0:	44 0f       	add	r20, r20
 6f2:	55 1f       	adc	r21, r21
 6f4:	59 f0       	breq	.+22     	; 0x70c <__fp_splitA+0x10>
 6f6:	5f 3f       	cpi	r21, 0xFF	; 255
 6f8:	71 f0       	breq	.+28     	; 0x716 <__fp_splitA+0x1a>
 6fa:	47 95       	ror	r20

000006fc <__fp_splitA>:
 6fc:	88 0f       	add	r24, r24
 6fe:	97 fb       	bst	r25, 7
 700:	99 1f       	adc	r25, r25
 702:	61 f0       	breq	.+24     	; 0x71c <__fp_splitA+0x20>
 704:	9f 3f       	cpi	r25, 0xFF	; 255
 706:	79 f0       	breq	.+30     	; 0x726 <__fp_splitA+0x2a>
 708:	87 95       	ror	r24
 70a:	08 95       	ret
 70c:	12 16       	cp	r1, r18
 70e:	13 06       	cpc	r1, r19
 710:	14 06       	cpc	r1, r20
 712:	55 1f       	adc	r21, r21
 714:	f2 cf       	rjmp	.-28     	; 0x6fa <__fp_split3+0xe>
 716:	46 95       	lsr	r20
 718:	f1 df       	rcall	.-30     	; 0x6fc <__fp_splitA>
 71a:	08 c0       	rjmp	.+16     	; 0x72c <__fp_splitA+0x30>
 71c:	16 16       	cp	r1, r22
 71e:	17 06       	cpc	r1, r23
 720:	18 06       	cpc	r1, r24
 722:	99 1f       	adc	r25, r25
 724:	f1 cf       	rjmp	.-30     	; 0x708 <__fp_splitA+0xc>
 726:	86 95       	lsr	r24
 728:	71 05       	cpc	r23, r1
 72a:	61 05       	cpc	r22, r1
 72c:	08 94       	sec
 72e:	08 95       	ret

00000730 <__fp_zero>:
 730:	e8 94       	clt

00000732 <__fp_szero>:
 732:	bb 27       	eor	r27, r27
 734:	66 27       	eor	r22, r22
 736:	77 27       	eor	r23, r23
 738:	cb 01       	movw	r24, r22
 73a:	97 f9       	bld	r25, 7
 73c:	08 95       	ret

0000073e <__mulsf3>:
 73e:	0b d0       	rcall	.+22     	; 0x756 <__mulsf3x>
 740:	c4 cf       	rjmp	.-120    	; 0x6ca <__fp_round>
 742:	b5 df       	rcall	.-150    	; 0x6ae <__fp_pscA>
 744:	28 f0       	brcs	.+10     	; 0x750 <__mulsf3+0x12>
 746:	ba df       	rcall	.-140    	; 0x6bc <__fp_pscB>
 748:	18 f0       	brcs	.+6      	; 0x750 <__mulsf3+0x12>
 74a:	95 23       	and	r25, r21
 74c:	09 f0       	breq	.+2      	; 0x750 <__mulsf3+0x12>
 74e:	a6 cf       	rjmp	.-180    	; 0x69c <__fp_inf>
 750:	ab cf       	rjmp	.-170    	; 0x6a8 <__fp_nan>
 752:	11 24       	eor	r1, r1
 754:	ee cf       	rjmp	.-36     	; 0x732 <__fp_szero>

00000756 <__mulsf3x>:
 756:	ca df       	rcall	.-108    	; 0x6ec <__fp_split3>
 758:	a0 f3       	brcs	.-24     	; 0x742 <__mulsf3+0x4>

0000075a <__mulsf3_pse>:
 75a:	95 9f       	mul	r25, r21
 75c:	d1 f3       	breq	.-12     	; 0x752 <__mulsf3+0x14>
 75e:	95 0f       	add	r25, r21
 760:	50 e0       	ldi	r21, 0x00	; 0
 762:	55 1f       	adc	r21, r21
 764:	62 9f       	mul	r22, r18
 766:	f0 01       	movw	r30, r0
 768:	72 9f       	mul	r23, r18
 76a:	bb 27       	eor	r27, r27
 76c:	f0 0d       	add	r31, r0
 76e:	b1 1d       	adc	r27, r1
 770:	63 9f       	mul	r22, r19
 772:	aa 27       	eor	r26, r26
 774:	f0 0d       	add	r31, r0
 776:	b1 1d       	adc	r27, r1
 778:	aa 1f       	adc	r26, r26
 77a:	64 9f       	mul	r22, r20
 77c:	66 27       	eor	r22, r22
 77e:	b0 0d       	add	r27, r0
 780:	a1 1d       	adc	r26, r1
 782:	66 1f       	adc	r22, r22
 784:	82 9f       	mul	r24, r18
 786:	22 27       	eor	r18, r18
 788:	b0 0d       	add	r27, r0
 78a:	a1 1d       	adc	r26, r1
 78c:	62 1f       	adc	r22, r18
 78e:	73 9f       	mul	r23, r19
 790:	b0 0d       	add	r27, r0
 792:	a1 1d       	adc	r26, r1
 794:	62 1f       	adc	r22, r18
 796:	83 9f       	mul	r24, r19
 798:	a0 0d       	add	r26, r0
 79a:	61 1d       	adc	r22, r1
 79c:	22 1f       	adc	r18, r18
 79e:	74 9f       	mul	r23, r20
 7a0:	33 27       	eor	r19, r19
 7a2:	a0 0d       	add	r26, r0
 7a4:	61 1d       	adc	r22, r1
 7a6:	23 1f       	adc	r18, r19
 7a8:	84 9f       	mul	r24, r20
 7aa:	60 0d       	add	r22, r0
 7ac:	21 1d       	adc	r18, r1
 7ae:	82 2f       	mov	r24, r18
 7b0:	76 2f       	mov	r23, r22
 7b2:	6a 2f       	mov	r22, r26
 7b4:	11 24       	eor	r1, r1
 7b6:	9f 57       	subi	r25, 0x7F	; 127
 7b8:	50 40       	sbci	r21, 0x00	; 0
 7ba:	8a f0       	brmi	.+34     	; 0x7de <__mulsf3_pse+0x84>
 7bc:	e1 f0       	breq	.+56     	; 0x7f6 <__mulsf3_pse+0x9c>
 7be:	88 23       	and	r24, r24
 7c0:	4a f0       	brmi	.+18     	; 0x7d4 <__mulsf3_pse+0x7a>
 7c2:	ee 0f       	add	r30, r30
 7c4:	ff 1f       	adc	r31, r31
 7c6:	bb 1f       	adc	r27, r27
 7c8:	66 1f       	adc	r22, r22
 7ca:	77 1f       	adc	r23, r23
 7cc:	88 1f       	adc	r24, r24
 7ce:	91 50       	subi	r25, 0x01	; 1
 7d0:	50 40       	sbci	r21, 0x00	; 0
 7d2:	a9 f7       	brne	.-22     	; 0x7be <__mulsf3_pse+0x64>
 7d4:	9e 3f       	cpi	r25, 0xFE	; 254
 7d6:	51 05       	cpc	r21, r1
 7d8:	70 f0       	brcs	.+28     	; 0x7f6 <__mulsf3_pse+0x9c>
 7da:	60 cf       	rjmp	.-320    	; 0x69c <__fp_inf>
 7dc:	aa cf       	rjmp	.-172    	; 0x732 <__fp_szero>
 7de:	5f 3f       	cpi	r21, 0xFF	; 255
 7e0:	ec f3       	brlt	.-6      	; 0x7dc <__mulsf3_pse+0x82>
 7e2:	98 3e       	cpi	r25, 0xE8	; 232
 7e4:	dc f3       	brlt	.-10     	; 0x7dc <__mulsf3_pse+0x82>
 7e6:	86 95       	lsr	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	b7 95       	ror	r27
 7ee:	f7 95       	ror	r31
 7f0:	e7 95       	ror	r30
 7f2:	9f 5f       	subi	r25, 0xFF	; 255
 7f4:	c1 f7       	brne	.-16     	; 0x7e6 <__mulsf3_pse+0x8c>
 7f6:	fe 2b       	or	r31, r30
 7f8:	88 0f       	add	r24, r24
 7fa:	91 1d       	adc	r25, r1
 7fc:	96 95       	lsr	r25
 7fe:	87 95       	ror	r24
 800:	97 f9       	bld	r25, 7
 802:	08 95       	ret

00000804 <__divmodhi4>:
 804:	97 fb       	bst	r25, 7
 806:	07 2e       	mov	r0, r23
 808:	16 f4       	brtc	.+4      	; 0x80e <__divmodhi4+0xa>
 80a:	00 94       	com	r0
 80c:	06 d0       	rcall	.+12     	; 0x81a <__divmodhi4_neg1>
 80e:	77 fd       	sbrc	r23, 7
 810:	08 d0       	rcall	.+16     	; 0x822 <__divmodhi4_neg2>
 812:	0b d0       	rcall	.+22     	; 0x82a <__udivmodhi4>
 814:	07 fc       	sbrc	r0, 7
 816:	05 d0       	rcall	.+10     	; 0x822 <__divmodhi4_neg2>
 818:	3e f4       	brtc	.+14     	; 0x828 <__divmodhi4_exit>

0000081a <__divmodhi4_neg1>:
 81a:	90 95       	com	r25
 81c:	81 95       	neg	r24
 81e:	9f 4f       	sbci	r25, 0xFF	; 255
 820:	08 95       	ret

00000822 <__divmodhi4_neg2>:
 822:	70 95       	com	r23
 824:	61 95       	neg	r22
 826:	7f 4f       	sbci	r23, 0xFF	; 255

00000828 <__divmodhi4_exit>:
 828:	08 95       	ret

0000082a <__udivmodhi4>:
 82a:	aa 1b       	sub	r26, r26
 82c:	bb 1b       	sub	r27, r27
 82e:	51 e1       	ldi	r21, 0x11	; 17
 830:	07 c0       	rjmp	.+14     	; 0x840 <__udivmodhi4_ep>

00000832 <__udivmodhi4_loop>:
 832:	aa 1f       	adc	r26, r26
 834:	bb 1f       	adc	r27, r27
 836:	a6 17       	cp	r26, r22
 838:	b7 07       	cpc	r27, r23
 83a:	10 f0       	brcs	.+4      	; 0x840 <__udivmodhi4_ep>
 83c:	a6 1b       	sub	r26, r22
 83e:	b7 0b       	sbc	r27, r23

00000840 <__udivmodhi4_ep>:
 840:	88 1f       	adc	r24, r24
 842:	99 1f       	adc	r25, r25
 844:	5a 95       	dec	r21
 846:	a9 f7       	brne	.-22     	; 0x832 <__udivmodhi4_loop>
 848:	80 95       	com	r24
 84a:	90 95       	com	r25
 84c:	bc 01       	movw	r22, r24
 84e:	cd 01       	movw	r24, r26
 850:	08 95       	ret

00000852 <strcat>:
 852:	fb 01       	movw	r30, r22
 854:	dc 01       	movw	r26, r24
 856:	0d 90       	ld	r0, X+
 858:	00 20       	and	r0, r0
 85a:	e9 f7       	brne	.-6      	; 0x856 <strcat+0x4>
 85c:	11 97       	sbiw	r26, 0x01	; 1
 85e:	01 90       	ld	r0, Z+
 860:	0d 92       	st	X+, r0
 862:	00 20       	and	r0, r0
 864:	e1 f7       	brne	.-8      	; 0x85e <strcat+0xc>
 866:	08 95       	ret

00000868 <sprintf>:
 868:	ae e0       	ldi	r26, 0x0E	; 14
 86a:	b0 e0       	ldi	r27, 0x00	; 0
 86c:	e9 e3       	ldi	r30, 0x39	; 57
 86e:	f4 e0       	ldi	r31, 0x04	; 4
 870:	91 c2       	rjmp	.+1314   	; 0xd94 <__prologue_saves__+0x1c>
 872:	0d 89       	ldd	r16, Y+21	; 0x15
 874:	1e 89       	ldd	r17, Y+22	; 0x16
 876:	86 e0       	ldi	r24, 0x06	; 6
 878:	8c 83       	std	Y+4, r24	; 0x04
 87a:	1a 83       	std	Y+2, r17	; 0x02
 87c:	09 83       	std	Y+1, r16	; 0x01
 87e:	8f ef       	ldi	r24, 0xFF	; 255
 880:	9f e7       	ldi	r25, 0x7F	; 127
 882:	9e 83       	std	Y+6, r25	; 0x06
 884:	8d 83       	std	Y+5, r24	; 0x05
 886:	ae 01       	movw	r20, r28
 888:	47 5e       	subi	r20, 0xE7	; 231
 88a:	5f 4f       	sbci	r21, 0xFF	; 255
 88c:	6f 89       	ldd	r22, Y+23	; 0x17
 88e:	78 8d       	ldd	r23, Y+24	; 0x18
 890:	ce 01       	movw	r24, r28
 892:	01 96       	adiw	r24, 0x01	; 1
 894:	08 d0       	rcall	.+16     	; 0x8a6 <vfprintf>
 896:	ef 81       	ldd	r30, Y+7	; 0x07
 898:	f8 85       	ldd	r31, Y+8	; 0x08
 89a:	e0 0f       	add	r30, r16
 89c:	f1 1f       	adc	r31, r17
 89e:	10 82       	st	Z, r1
 8a0:	2e 96       	adiw	r28, 0x0e	; 14
 8a2:	e4 e0       	ldi	r30, 0x04	; 4
 8a4:	93 c2       	rjmp	.+1318   	; 0xdcc <__epilogue_restores__+0x1c>

000008a6 <vfprintf>:
 8a6:	ac e0       	ldi	r26, 0x0C	; 12
 8a8:	b0 e0       	ldi	r27, 0x00	; 0
 8aa:	e8 e5       	ldi	r30, 0x58	; 88
 8ac:	f4 e0       	ldi	r31, 0x04	; 4
 8ae:	64 c2       	rjmp	.+1224   	; 0xd78 <__prologue_saves__>
 8b0:	7c 01       	movw	r14, r24
 8b2:	6b 01       	movw	r12, r22
 8b4:	8a 01       	movw	r16, r20
 8b6:	fc 01       	movw	r30, r24
 8b8:	17 82       	std	Z+7, r1	; 0x07
 8ba:	16 82       	std	Z+6, r1	; 0x06
 8bc:	83 81       	ldd	r24, Z+3	; 0x03
 8be:	81 ff       	sbrs	r24, 1
 8c0:	b0 c1       	rjmp	.+864    	; 0xc22 <vfprintf+0x37c>
 8c2:	ce 01       	movw	r24, r28
 8c4:	01 96       	adiw	r24, 0x01	; 1
 8c6:	4c 01       	movw	r8, r24
 8c8:	f7 01       	movw	r30, r14
 8ca:	93 81       	ldd	r25, Z+3	; 0x03
 8cc:	f6 01       	movw	r30, r12
 8ce:	93 fd       	sbrc	r25, 3
 8d0:	85 91       	lpm	r24, Z+
 8d2:	93 ff       	sbrs	r25, 3
 8d4:	81 91       	ld	r24, Z+
 8d6:	6f 01       	movw	r12, r30
 8d8:	88 23       	and	r24, r24
 8da:	09 f4       	brne	.+2      	; 0x8de <vfprintf+0x38>
 8dc:	9e c1       	rjmp	.+828    	; 0xc1a <vfprintf+0x374>
 8de:	85 32       	cpi	r24, 0x25	; 37
 8e0:	39 f4       	brne	.+14     	; 0x8f0 <vfprintf+0x4a>
 8e2:	93 fd       	sbrc	r25, 3
 8e4:	85 91       	lpm	r24, Z+
 8e6:	93 ff       	sbrs	r25, 3
 8e8:	81 91       	ld	r24, Z+
 8ea:	6f 01       	movw	r12, r30
 8ec:	85 32       	cpi	r24, 0x25	; 37
 8ee:	21 f4       	brne	.+8      	; 0x8f8 <vfprintf+0x52>
 8f0:	b7 01       	movw	r22, r14
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	b1 d1       	rcall	.+866    	; 0xc58 <fputc>
 8f6:	e8 cf       	rjmp	.-48     	; 0x8c8 <vfprintf+0x22>
 8f8:	51 2c       	mov	r5, r1
 8fa:	31 2c       	mov	r3, r1
 8fc:	20 e0       	ldi	r18, 0x00	; 0
 8fe:	20 32       	cpi	r18, 0x20	; 32
 900:	a0 f4       	brcc	.+40     	; 0x92a <vfprintf+0x84>
 902:	8b 32       	cpi	r24, 0x2B	; 43
 904:	69 f0       	breq	.+26     	; 0x920 <vfprintf+0x7a>
 906:	30 f4       	brcc	.+12     	; 0x914 <vfprintf+0x6e>
 908:	80 32       	cpi	r24, 0x20	; 32
 90a:	59 f0       	breq	.+22     	; 0x922 <vfprintf+0x7c>
 90c:	83 32       	cpi	r24, 0x23	; 35
 90e:	69 f4       	brne	.+26     	; 0x92a <vfprintf+0x84>
 910:	20 61       	ori	r18, 0x10	; 16
 912:	2c c0       	rjmp	.+88     	; 0x96c <vfprintf+0xc6>
 914:	8d 32       	cpi	r24, 0x2D	; 45
 916:	39 f0       	breq	.+14     	; 0x926 <vfprintf+0x80>
 918:	80 33       	cpi	r24, 0x30	; 48
 91a:	39 f4       	brne	.+14     	; 0x92a <vfprintf+0x84>
 91c:	21 60       	ori	r18, 0x01	; 1
 91e:	26 c0       	rjmp	.+76     	; 0x96c <vfprintf+0xc6>
 920:	22 60       	ori	r18, 0x02	; 2
 922:	24 60       	ori	r18, 0x04	; 4
 924:	23 c0       	rjmp	.+70     	; 0x96c <vfprintf+0xc6>
 926:	28 60       	ori	r18, 0x08	; 8
 928:	21 c0       	rjmp	.+66     	; 0x96c <vfprintf+0xc6>
 92a:	27 fd       	sbrc	r18, 7
 92c:	27 c0       	rjmp	.+78     	; 0x97c <vfprintf+0xd6>
 92e:	30 ed       	ldi	r19, 0xD0	; 208
 930:	38 0f       	add	r19, r24
 932:	3a 30       	cpi	r19, 0x0A	; 10
 934:	78 f4       	brcc	.+30     	; 0x954 <vfprintf+0xae>
 936:	26 ff       	sbrs	r18, 6
 938:	06 c0       	rjmp	.+12     	; 0x946 <vfprintf+0xa0>
 93a:	fa e0       	ldi	r31, 0x0A	; 10
 93c:	5f 9e       	mul	r5, r31
 93e:	30 0d       	add	r19, r0
 940:	11 24       	eor	r1, r1
 942:	53 2e       	mov	r5, r19
 944:	13 c0       	rjmp	.+38     	; 0x96c <vfprintf+0xc6>
 946:	8a e0       	ldi	r24, 0x0A	; 10
 948:	38 9e       	mul	r3, r24
 94a:	30 0d       	add	r19, r0
 94c:	11 24       	eor	r1, r1
 94e:	33 2e       	mov	r3, r19
 950:	20 62       	ori	r18, 0x20	; 32
 952:	0c c0       	rjmp	.+24     	; 0x96c <vfprintf+0xc6>
 954:	8e 32       	cpi	r24, 0x2E	; 46
 956:	21 f4       	brne	.+8      	; 0x960 <vfprintf+0xba>
 958:	26 fd       	sbrc	r18, 6
 95a:	5f c1       	rjmp	.+702    	; 0xc1a <vfprintf+0x374>
 95c:	20 64       	ori	r18, 0x40	; 64
 95e:	06 c0       	rjmp	.+12     	; 0x96c <vfprintf+0xc6>
 960:	8c 36       	cpi	r24, 0x6C	; 108
 962:	11 f4       	brne	.+4      	; 0x968 <vfprintf+0xc2>
 964:	20 68       	ori	r18, 0x80	; 128
 966:	02 c0       	rjmp	.+4      	; 0x96c <vfprintf+0xc6>
 968:	88 36       	cpi	r24, 0x68	; 104
 96a:	41 f4       	brne	.+16     	; 0x97c <vfprintf+0xd6>
 96c:	f6 01       	movw	r30, r12
 96e:	93 fd       	sbrc	r25, 3
 970:	85 91       	lpm	r24, Z+
 972:	93 ff       	sbrs	r25, 3
 974:	81 91       	ld	r24, Z+
 976:	6f 01       	movw	r12, r30
 978:	81 11       	cpse	r24, r1
 97a:	c1 cf       	rjmp	.-126    	; 0x8fe <vfprintf+0x58>
 97c:	98 2f       	mov	r25, r24
 97e:	9f 7d       	andi	r25, 0xDF	; 223
 980:	95 54       	subi	r25, 0x45	; 69
 982:	93 30       	cpi	r25, 0x03	; 3
 984:	28 f4       	brcc	.+10     	; 0x990 <vfprintf+0xea>
 986:	0c 5f       	subi	r16, 0xFC	; 252
 988:	1f 4f       	sbci	r17, 0xFF	; 255
 98a:	ff e3       	ldi	r31, 0x3F	; 63
 98c:	f9 83       	std	Y+1, r31	; 0x01
 98e:	0d c0       	rjmp	.+26     	; 0x9aa <vfprintf+0x104>
 990:	83 36       	cpi	r24, 0x63	; 99
 992:	31 f0       	breq	.+12     	; 0x9a0 <vfprintf+0xfa>
 994:	83 37       	cpi	r24, 0x73	; 115
 996:	71 f0       	breq	.+28     	; 0x9b4 <vfprintf+0x10e>
 998:	83 35       	cpi	r24, 0x53	; 83
 99a:	09 f0       	breq	.+2      	; 0x99e <vfprintf+0xf8>
 99c:	57 c0       	rjmp	.+174    	; 0xa4c <vfprintf+0x1a6>
 99e:	21 c0       	rjmp	.+66     	; 0x9e2 <vfprintf+0x13c>
 9a0:	f8 01       	movw	r30, r16
 9a2:	80 81       	ld	r24, Z
 9a4:	89 83       	std	Y+1, r24	; 0x01
 9a6:	0e 5f       	subi	r16, 0xFE	; 254
 9a8:	1f 4f       	sbci	r17, 0xFF	; 255
 9aa:	44 24       	eor	r4, r4
 9ac:	43 94       	inc	r4
 9ae:	51 2c       	mov	r5, r1
 9b0:	54 01       	movw	r10, r8
 9b2:	14 c0       	rjmp	.+40     	; 0x9dc <vfprintf+0x136>
 9b4:	38 01       	movw	r6, r16
 9b6:	f2 e0       	ldi	r31, 0x02	; 2
 9b8:	6f 0e       	add	r6, r31
 9ba:	71 1c       	adc	r7, r1
 9bc:	f8 01       	movw	r30, r16
 9be:	a0 80       	ld	r10, Z
 9c0:	b1 80       	ldd	r11, Z+1	; 0x01
 9c2:	26 ff       	sbrs	r18, 6
 9c4:	03 c0       	rjmp	.+6      	; 0x9cc <vfprintf+0x126>
 9c6:	65 2d       	mov	r22, r5
 9c8:	70 e0       	ldi	r23, 0x00	; 0
 9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <vfprintf+0x12a>
 9cc:	6f ef       	ldi	r22, 0xFF	; 255
 9ce:	7f ef       	ldi	r23, 0xFF	; 255
 9d0:	c5 01       	movw	r24, r10
 9d2:	2c 87       	std	Y+12, r18	; 0x0c
 9d4:	36 d1       	rcall	.+620    	; 0xc42 <strnlen>
 9d6:	2c 01       	movw	r4, r24
 9d8:	83 01       	movw	r16, r6
 9da:	2c 85       	ldd	r18, Y+12	; 0x0c
 9dc:	2f 77       	andi	r18, 0x7F	; 127
 9de:	22 2e       	mov	r2, r18
 9e0:	16 c0       	rjmp	.+44     	; 0xa0e <vfprintf+0x168>
 9e2:	38 01       	movw	r6, r16
 9e4:	f2 e0       	ldi	r31, 0x02	; 2
 9e6:	6f 0e       	add	r6, r31
 9e8:	71 1c       	adc	r7, r1
 9ea:	f8 01       	movw	r30, r16
 9ec:	a0 80       	ld	r10, Z
 9ee:	b1 80       	ldd	r11, Z+1	; 0x01
 9f0:	26 ff       	sbrs	r18, 6
 9f2:	03 c0       	rjmp	.+6      	; 0x9fa <vfprintf+0x154>
 9f4:	65 2d       	mov	r22, r5
 9f6:	70 e0       	ldi	r23, 0x00	; 0
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <vfprintf+0x158>
 9fa:	6f ef       	ldi	r22, 0xFF	; 255
 9fc:	7f ef       	ldi	r23, 0xFF	; 255
 9fe:	c5 01       	movw	r24, r10
 a00:	2c 87       	std	Y+12, r18	; 0x0c
 a02:	14 d1       	rcall	.+552    	; 0xc2c <strnlen_P>
 a04:	2c 01       	movw	r4, r24
 a06:	2c 85       	ldd	r18, Y+12	; 0x0c
 a08:	20 68       	ori	r18, 0x80	; 128
 a0a:	22 2e       	mov	r2, r18
 a0c:	83 01       	movw	r16, r6
 a0e:	23 fc       	sbrc	r2, 3
 a10:	19 c0       	rjmp	.+50     	; 0xa44 <vfprintf+0x19e>
 a12:	83 2d       	mov	r24, r3
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	48 16       	cp	r4, r24
 a18:	59 06       	cpc	r5, r25
 a1a:	a0 f4       	brcc	.+40     	; 0xa44 <vfprintf+0x19e>
 a1c:	b7 01       	movw	r22, r14
 a1e:	80 e2       	ldi	r24, 0x20	; 32
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	1a d1       	rcall	.+564    	; 0xc58 <fputc>
 a24:	3a 94       	dec	r3
 a26:	f5 cf       	rjmp	.-22     	; 0xa12 <vfprintf+0x16c>
 a28:	f5 01       	movw	r30, r10
 a2a:	27 fc       	sbrc	r2, 7
 a2c:	85 91       	lpm	r24, Z+
 a2e:	27 fe       	sbrs	r2, 7
 a30:	81 91       	ld	r24, Z+
 a32:	5f 01       	movw	r10, r30
 a34:	b7 01       	movw	r22, r14
 a36:	90 e0       	ldi	r25, 0x00	; 0
 a38:	0f d1       	rcall	.+542    	; 0xc58 <fputc>
 a3a:	31 10       	cpse	r3, r1
 a3c:	3a 94       	dec	r3
 a3e:	f1 e0       	ldi	r31, 0x01	; 1
 a40:	4f 1a       	sub	r4, r31
 a42:	51 08       	sbc	r5, r1
 a44:	41 14       	cp	r4, r1
 a46:	51 04       	cpc	r5, r1
 a48:	79 f7       	brne	.-34     	; 0xa28 <vfprintf+0x182>
 a4a:	de c0       	rjmp	.+444    	; 0xc08 <vfprintf+0x362>
 a4c:	84 36       	cpi	r24, 0x64	; 100
 a4e:	11 f0       	breq	.+4      	; 0xa54 <vfprintf+0x1ae>
 a50:	89 36       	cpi	r24, 0x69	; 105
 a52:	31 f5       	brne	.+76     	; 0xaa0 <vfprintf+0x1fa>
 a54:	f8 01       	movw	r30, r16
 a56:	27 ff       	sbrs	r18, 7
 a58:	07 c0       	rjmp	.+14     	; 0xa68 <vfprintf+0x1c2>
 a5a:	60 81       	ld	r22, Z
 a5c:	71 81       	ldd	r23, Z+1	; 0x01
 a5e:	82 81       	ldd	r24, Z+2	; 0x02
 a60:	93 81       	ldd	r25, Z+3	; 0x03
 a62:	0c 5f       	subi	r16, 0xFC	; 252
 a64:	1f 4f       	sbci	r17, 0xFF	; 255
 a66:	08 c0       	rjmp	.+16     	; 0xa78 <vfprintf+0x1d2>
 a68:	60 81       	ld	r22, Z
 a6a:	71 81       	ldd	r23, Z+1	; 0x01
 a6c:	88 27       	eor	r24, r24
 a6e:	77 fd       	sbrc	r23, 7
 a70:	80 95       	com	r24
 a72:	98 2f       	mov	r25, r24
 a74:	0e 5f       	subi	r16, 0xFE	; 254
 a76:	1f 4f       	sbci	r17, 0xFF	; 255
 a78:	2f 76       	andi	r18, 0x6F	; 111
 a7a:	b2 2e       	mov	r11, r18
 a7c:	97 ff       	sbrs	r25, 7
 a7e:	09 c0       	rjmp	.+18     	; 0xa92 <vfprintf+0x1ec>
 a80:	90 95       	com	r25
 a82:	80 95       	com	r24
 a84:	70 95       	com	r23
 a86:	61 95       	neg	r22
 a88:	7f 4f       	sbci	r23, 0xFF	; 255
 a8a:	8f 4f       	sbci	r24, 0xFF	; 255
 a8c:	9f 4f       	sbci	r25, 0xFF	; 255
 a8e:	20 68       	ori	r18, 0x80	; 128
 a90:	b2 2e       	mov	r11, r18
 a92:	2a e0       	ldi	r18, 0x0A	; 10
 a94:	30 e0       	ldi	r19, 0x00	; 0
 a96:	a4 01       	movw	r20, r8
 a98:	11 d1       	rcall	.+546    	; 0xcbc <__ultoa_invert>
 a9a:	a8 2e       	mov	r10, r24
 a9c:	a8 18       	sub	r10, r8
 a9e:	43 c0       	rjmp	.+134    	; 0xb26 <vfprintf+0x280>
 aa0:	85 37       	cpi	r24, 0x75	; 117
 aa2:	29 f4       	brne	.+10     	; 0xaae <vfprintf+0x208>
 aa4:	2f 7e       	andi	r18, 0xEF	; 239
 aa6:	b2 2e       	mov	r11, r18
 aa8:	2a e0       	ldi	r18, 0x0A	; 10
 aaa:	30 e0       	ldi	r19, 0x00	; 0
 aac:	25 c0       	rjmp	.+74     	; 0xaf8 <vfprintf+0x252>
 aae:	f2 2f       	mov	r31, r18
 ab0:	f9 7f       	andi	r31, 0xF9	; 249
 ab2:	bf 2e       	mov	r11, r31
 ab4:	8f 36       	cpi	r24, 0x6F	; 111
 ab6:	c1 f0       	breq	.+48     	; 0xae8 <vfprintf+0x242>
 ab8:	18 f4       	brcc	.+6      	; 0xac0 <vfprintf+0x21a>
 aba:	88 35       	cpi	r24, 0x58	; 88
 abc:	79 f0       	breq	.+30     	; 0xadc <vfprintf+0x236>
 abe:	ad c0       	rjmp	.+346    	; 0xc1a <vfprintf+0x374>
 ac0:	80 37       	cpi	r24, 0x70	; 112
 ac2:	19 f0       	breq	.+6      	; 0xaca <vfprintf+0x224>
 ac4:	88 37       	cpi	r24, 0x78	; 120
 ac6:	21 f0       	breq	.+8      	; 0xad0 <vfprintf+0x22a>
 ac8:	a8 c0       	rjmp	.+336    	; 0xc1a <vfprintf+0x374>
 aca:	2f 2f       	mov	r18, r31
 acc:	20 61       	ori	r18, 0x10	; 16
 ace:	b2 2e       	mov	r11, r18
 ad0:	b4 fe       	sbrs	r11, 4
 ad2:	0d c0       	rjmp	.+26     	; 0xaee <vfprintf+0x248>
 ad4:	8b 2d       	mov	r24, r11
 ad6:	84 60       	ori	r24, 0x04	; 4
 ad8:	b8 2e       	mov	r11, r24
 ada:	09 c0       	rjmp	.+18     	; 0xaee <vfprintf+0x248>
 adc:	24 ff       	sbrs	r18, 4
 ade:	0a c0       	rjmp	.+20     	; 0xaf4 <vfprintf+0x24e>
 ae0:	9f 2f       	mov	r25, r31
 ae2:	96 60       	ori	r25, 0x06	; 6
 ae4:	b9 2e       	mov	r11, r25
 ae6:	06 c0       	rjmp	.+12     	; 0xaf4 <vfprintf+0x24e>
 ae8:	28 e0       	ldi	r18, 0x08	; 8
 aea:	30 e0       	ldi	r19, 0x00	; 0
 aec:	05 c0       	rjmp	.+10     	; 0xaf8 <vfprintf+0x252>
 aee:	20 e1       	ldi	r18, 0x10	; 16
 af0:	30 e0       	ldi	r19, 0x00	; 0
 af2:	02 c0       	rjmp	.+4      	; 0xaf8 <vfprintf+0x252>
 af4:	20 e1       	ldi	r18, 0x10	; 16
 af6:	32 e0       	ldi	r19, 0x02	; 2
 af8:	f8 01       	movw	r30, r16
 afa:	b7 fe       	sbrs	r11, 7
 afc:	07 c0       	rjmp	.+14     	; 0xb0c <vfprintf+0x266>
 afe:	60 81       	ld	r22, Z
 b00:	71 81       	ldd	r23, Z+1	; 0x01
 b02:	82 81       	ldd	r24, Z+2	; 0x02
 b04:	93 81       	ldd	r25, Z+3	; 0x03
 b06:	0c 5f       	subi	r16, 0xFC	; 252
 b08:	1f 4f       	sbci	r17, 0xFF	; 255
 b0a:	06 c0       	rjmp	.+12     	; 0xb18 <vfprintf+0x272>
 b0c:	60 81       	ld	r22, Z
 b0e:	71 81       	ldd	r23, Z+1	; 0x01
 b10:	80 e0       	ldi	r24, 0x00	; 0
 b12:	90 e0       	ldi	r25, 0x00	; 0
 b14:	0e 5f       	subi	r16, 0xFE	; 254
 b16:	1f 4f       	sbci	r17, 0xFF	; 255
 b18:	a4 01       	movw	r20, r8
 b1a:	d0 d0       	rcall	.+416    	; 0xcbc <__ultoa_invert>
 b1c:	a8 2e       	mov	r10, r24
 b1e:	a8 18       	sub	r10, r8
 b20:	fb 2d       	mov	r31, r11
 b22:	ff 77       	andi	r31, 0x7F	; 127
 b24:	bf 2e       	mov	r11, r31
 b26:	b6 fe       	sbrs	r11, 6
 b28:	0b c0       	rjmp	.+22     	; 0xb40 <vfprintf+0x29a>
 b2a:	2b 2d       	mov	r18, r11
 b2c:	2e 7f       	andi	r18, 0xFE	; 254
 b2e:	a5 14       	cp	r10, r5
 b30:	50 f4       	brcc	.+20     	; 0xb46 <vfprintf+0x2a0>
 b32:	b4 fe       	sbrs	r11, 4
 b34:	0a c0       	rjmp	.+20     	; 0xb4a <vfprintf+0x2a4>
 b36:	b2 fc       	sbrc	r11, 2
 b38:	08 c0       	rjmp	.+16     	; 0xb4a <vfprintf+0x2a4>
 b3a:	2b 2d       	mov	r18, r11
 b3c:	2e 7e       	andi	r18, 0xEE	; 238
 b3e:	05 c0       	rjmp	.+10     	; 0xb4a <vfprintf+0x2a4>
 b40:	7a 2c       	mov	r7, r10
 b42:	2b 2d       	mov	r18, r11
 b44:	03 c0       	rjmp	.+6      	; 0xb4c <vfprintf+0x2a6>
 b46:	7a 2c       	mov	r7, r10
 b48:	01 c0       	rjmp	.+2      	; 0xb4c <vfprintf+0x2a6>
 b4a:	75 2c       	mov	r7, r5
 b4c:	24 ff       	sbrs	r18, 4
 b4e:	0d c0       	rjmp	.+26     	; 0xb6a <vfprintf+0x2c4>
 b50:	fe 01       	movw	r30, r28
 b52:	ea 0d       	add	r30, r10
 b54:	f1 1d       	adc	r31, r1
 b56:	80 81       	ld	r24, Z
 b58:	80 33       	cpi	r24, 0x30	; 48
 b5a:	11 f4       	brne	.+4      	; 0xb60 <vfprintf+0x2ba>
 b5c:	29 7e       	andi	r18, 0xE9	; 233
 b5e:	09 c0       	rjmp	.+18     	; 0xb72 <vfprintf+0x2cc>
 b60:	22 ff       	sbrs	r18, 2
 b62:	06 c0       	rjmp	.+12     	; 0xb70 <vfprintf+0x2ca>
 b64:	73 94       	inc	r7
 b66:	73 94       	inc	r7
 b68:	04 c0       	rjmp	.+8      	; 0xb72 <vfprintf+0x2cc>
 b6a:	82 2f       	mov	r24, r18
 b6c:	86 78       	andi	r24, 0x86	; 134
 b6e:	09 f0       	breq	.+2      	; 0xb72 <vfprintf+0x2cc>
 b70:	73 94       	inc	r7
 b72:	23 fd       	sbrc	r18, 3
 b74:	12 c0       	rjmp	.+36     	; 0xb9a <vfprintf+0x2f4>
 b76:	20 ff       	sbrs	r18, 0
 b78:	06 c0       	rjmp	.+12     	; 0xb86 <vfprintf+0x2e0>
 b7a:	5a 2c       	mov	r5, r10
 b7c:	73 14       	cp	r7, r3
 b7e:	18 f4       	brcc	.+6      	; 0xb86 <vfprintf+0x2e0>
 b80:	53 0c       	add	r5, r3
 b82:	57 18       	sub	r5, r7
 b84:	73 2c       	mov	r7, r3
 b86:	73 14       	cp	r7, r3
 b88:	60 f4       	brcc	.+24     	; 0xba2 <vfprintf+0x2fc>
 b8a:	b7 01       	movw	r22, r14
 b8c:	80 e2       	ldi	r24, 0x20	; 32
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	2c 87       	std	Y+12, r18	; 0x0c
 b92:	62 d0       	rcall	.+196    	; 0xc58 <fputc>
 b94:	73 94       	inc	r7
 b96:	2c 85       	ldd	r18, Y+12	; 0x0c
 b98:	f6 cf       	rjmp	.-20     	; 0xb86 <vfprintf+0x2e0>
 b9a:	73 14       	cp	r7, r3
 b9c:	10 f4       	brcc	.+4      	; 0xba2 <vfprintf+0x2fc>
 b9e:	37 18       	sub	r3, r7
 ba0:	01 c0       	rjmp	.+2      	; 0xba4 <vfprintf+0x2fe>
 ba2:	31 2c       	mov	r3, r1
 ba4:	24 ff       	sbrs	r18, 4
 ba6:	11 c0       	rjmp	.+34     	; 0xbca <vfprintf+0x324>
 ba8:	b7 01       	movw	r22, r14
 baa:	80 e3       	ldi	r24, 0x30	; 48
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	2c 87       	std	Y+12, r18	; 0x0c
 bb0:	53 d0       	rcall	.+166    	; 0xc58 <fputc>
 bb2:	2c 85       	ldd	r18, Y+12	; 0x0c
 bb4:	22 ff       	sbrs	r18, 2
 bb6:	16 c0       	rjmp	.+44     	; 0xbe4 <vfprintf+0x33e>
 bb8:	21 ff       	sbrs	r18, 1
 bba:	03 c0       	rjmp	.+6      	; 0xbc2 <vfprintf+0x31c>
 bbc:	88 e5       	ldi	r24, 0x58	; 88
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	02 c0       	rjmp	.+4      	; 0xbc6 <vfprintf+0x320>
 bc2:	88 e7       	ldi	r24, 0x78	; 120
 bc4:	90 e0       	ldi	r25, 0x00	; 0
 bc6:	b7 01       	movw	r22, r14
 bc8:	0c c0       	rjmp	.+24     	; 0xbe2 <vfprintf+0x33c>
 bca:	82 2f       	mov	r24, r18
 bcc:	86 78       	andi	r24, 0x86	; 134
 bce:	51 f0       	breq	.+20     	; 0xbe4 <vfprintf+0x33e>
 bd0:	21 fd       	sbrc	r18, 1
 bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <vfprintf+0x332>
 bd4:	80 e2       	ldi	r24, 0x20	; 32
 bd6:	01 c0       	rjmp	.+2      	; 0xbda <vfprintf+0x334>
 bd8:	8b e2       	ldi	r24, 0x2B	; 43
 bda:	27 fd       	sbrc	r18, 7
 bdc:	8d e2       	ldi	r24, 0x2D	; 45
 bde:	b7 01       	movw	r22, r14
 be0:	90 e0       	ldi	r25, 0x00	; 0
 be2:	3a d0       	rcall	.+116    	; 0xc58 <fputc>
 be4:	a5 14       	cp	r10, r5
 be6:	30 f4       	brcc	.+12     	; 0xbf4 <vfprintf+0x34e>
 be8:	b7 01       	movw	r22, r14
 bea:	80 e3       	ldi	r24, 0x30	; 48
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	34 d0       	rcall	.+104    	; 0xc58 <fputc>
 bf0:	5a 94       	dec	r5
 bf2:	f8 cf       	rjmp	.-16     	; 0xbe4 <vfprintf+0x33e>
 bf4:	aa 94       	dec	r10
 bf6:	f4 01       	movw	r30, r8
 bf8:	ea 0d       	add	r30, r10
 bfa:	f1 1d       	adc	r31, r1
 bfc:	80 81       	ld	r24, Z
 bfe:	b7 01       	movw	r22, r14
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	2a d0       	rcall	.+84     	; 0xc58 <fputc>
 c04:	a1 10       	cpse	r10, r1
 c06:	f6 cf       	rjmp	.-20     	; 0xbf4 <vfprintf+0x34e>
 c08:	33 20       	and	r3, r3
 c0a:	09 f4       	brne	.+2      	; 0xc0e <vfprintf+0x368>
 c0c:	5d ce       	rjmp	.-838    	; 0x8c8 <vfprintf+0x22>
 c0e:	b7 01       	movw	r22, r14
 c10:	80 e2       	ldi	r24, 0x20	; 32
 c12:	90 e0       	ldi	r25, 0x00	; 0
 c14:	21 d0       	rcall	.+66     	; 0xc58 <fputc>
 c16:	3a 94       	dec	r3
 c18:	f7 cf       	rjmp	.-18     	; 0xc08 <vfprintf+0x362>
 c1a:	f7 01       	movw	r30, r14
 c1c:	86 81       	ldd	r24, Z+6	; 0x06
 c1e:	97 81       	ldd	r25, Z+7	; 0x07
 c20:	02 c0       	rjmp	.+4      	; 0xc26 <vfprintf+0x380>
 c22:	8f ef       	ldi	r24, 0xFF	; 255
 c24:	9f ef       	ldi	r25, 0xFF	; 255
 c26:	2c 96       	adiw	r28, 0x0c	; 12
 c28:	e2 e1       	ldi	r30, 0x12	; 18
 c2a:	c2 c0       	rjmp	.+388    	; 0xdb0 <__epilogue_restores__>

00000c2c <strnlen_P>:
 c2c:	fc 01       	movw	r30, r24
 c2e:	05 90       	lpm	r0, Z+
 c30:	61 50       	subi	r22, 0x01	; 1
 c32:	70 40       	sbci	r23, 0x00	; 0
 c34:	01 10       	cpse	r0, r1
 c36:	d8 f7       	brcc	.-10     	; 0xc2e <strnlen_P+0x2>
 c38:	80 95       	com	r24
 c3a:	90 95       	com	r25
 c3c:	8e 0f       	add	r24, r30
 c3e:	9f 1f       	adc	r25, r31
 c40:	08 95       	ret

00000c42 <strnlen>:
 c42:	fc 01       	movw	r30, r24
 c44:	61 50       	subi	r22, 0x01	; 1
 c46:	70 40       	sbci	r23, 0x00	; 0
 c48:	01 90       	ld	r0, Z+
 c4a:	01 10       	cpse	r0, r1
 c4c:	d8 f7       	brcc	.-10     	; 0xc44 <strnlen+0x2>
 c4e:	80 95       	com	r24
 c50:	90 95       	com	r25
 c52:	8e 0f       	add	r24, r30
 c54:	9f 1f       	adc	r25, r31
 c56:	08 95       	ret

00000c58 <fputc>:
 c58:	0f 93       	push	r16
 c5a:	1f 93       	push	r17
 c5c:	cf 93       	push	r28
 c5e:	df 93       	push	r29
 c60:	18 2f       	mov	r17, r24
 c62:	09 2f       	mov	r16, r25
 c64:	eb 01       	movw	r28, r22
 c66:	8b 81       	ldd	r24, Y+3	; 0x03
 c68:	81 fd       	sbrc	r24, 1
 c6a:	03 c0       	rjmp	.+6      	; 0xc72 <fputc+0x1a>
 c6c:	8f ef       	ldi	r24, 0xFF	; 255
 c6e:	9f ef       	ldi	r25, 0xFF	; 255
 c70:	20 c0       	rjmp	.+64     	; 0xcb2 <fputc+0x5a>
 c72:	82 ff       	sbrs	r24, 2
 c74:	10 c0       	rjmp	.+32     	; 0xc96 <fputc+0x3e>
 c76:	4e 81       	ldd	r20, Y+6	; 0x06
 c78:	5f 81       	ldd	r21, Y+7	; 0x07
 c7a:	2c 81       	ldd	r18, Y+4	; 0x04
 c7c:	3d 81       	ldd	r19, Y+5	; 0x05
 c7e:	42 17       	cp	r20, r18
 c80:	53 07       	cpc	r21, r19
 c82:	7c f4       	brge	.+30     	; 0xca2 <fputc+0x4a>
 c84:	e8 81       	ld	r30, Y
 c86:	f9 81       	ldd	r31, Y+1	; 0x01
 c88:	9f 01       	movw	r18, r30
 c8a:	2f 5f       	subi	r18, 0xFF	; 255
 c8c:	3f 4f       	sbci	r19, 0xFF	; 255
 c8e:	39 83       	std	Y+1, r19	; 0x01
 c90:	28 83       	st	Y, r18
 c92:	10 83       	st	Z, r17
 c94:	06 c0       	rjmp	.+12     	; 0xca2 <fputc+0x4a>
 c96:	e8 85       	ldd	r30, Y+8	; 0x08
 c98:	f9 85       	ldd	r31, Y+9	; 0x09
 c9a:	81 2f       	mov	r24, r17
 c9c:	09 95       	icall
 c9e:	89 2b       	or	r24, r25
 ca0:	29 f7       	brne	.-54     	; 0xc6c <fputc+0x14>
 ca2:	2e 81       	ldd	r18, Y+6	; 0x06
 ca4:	3f 81       	ldd	r19, Y+7	; 0x07
 ca6:	2f 5f       	subi	r18, 0xFF	; 255
 ca8:	3f 4f       	sbci	r19, 0xFF	; 255
 caa:	3f 83       	std	Y+7, r19	; 0x07
 cac:	2e 83       	std	Y+6, r18	; 0x06
 cae:	81 2f       	mov	r24, r17
 cb0:	90 2f       	mov	r25, r16
 cb2:	df 91       	pop	r29
 cb4:	cf 91       	pop	r28
 cb6:	1f 91       	pop	r17
 cb8:	0f 91       	pop	r16
 cba:	08 95       	ret

00000cbc <__ultoa_invert>:
 cbc:	fa 01       	movw	r30, r20
 cbe:	aa 27       	eor	r26, r26
 cc0:	28 30       	cpi	r18, 0x08	; 8
 cc2:	51 f1       	breq	.+84     	; 0xd18 <__ultoa_invert+0x5c>
 cc4:	20 31       	cpi	r18, 0x10	; 16
 cc6:	81 f1       	breq	.+96     	; 0xd28 <__ultoa_invert+0x6c>
 cc8:	e8 94       	clt
 cca:	6f 93       	push	r22
 ccc:	6e 7f       	andi	r22, 0xFE	; 254
 cce:	6e 5f       	subi	r22, 0xFE	; 254
 cd0:	7f 4f       	sbci	r23, 0xFF	; 255
 cd2:	8f 4f       	sbci	r24, 0xFF	; 255
 cd4:	9f 4f       	sbci	r25, 0xFF	; 255
 cd6:	af 4f       	sbci	r26, 0xFF	; 255
 cd8:	b1 e0       	ldi	r27, 0x01	; 1
 cda:	3e d0       	rcall	.+124    	; 0xd58 <__ultoa_invert+0x9c>
 cdc:	b4 e0       	ldi	r27, 0x04	; 4
 cde:	3c d0       	rcall	.+120    	; 0xd58 <__ultoa_invert+0x9c>
 ce0:	67 0f       	add	r22, r23
 ce2:	78 1f       	adc	r23, r24
 ce4:	89 1f       	adc	r24, r25
 ce6:	9a 1f       	adc	r25, r26
 ce8:	a1 1d       	adc	r26, r1
 cea:	68 0f       	add	r22, r24
 cec:	79 1f       	adc	r23, r25
 cee:	8a 1f       	adc	r24, r26
 cf0:	91 1d       	adc	r25, r1
 cf2:	a1 1d       	adc	r26, r1
 cf4:	6a 0f       	add	r22, r26
 cf6:	71 1d       	adc	r23, r1
 cf8:	81 1d       	adc	r24, r1
 cfa:	91 1d       	adc	r25, r1
 cfc:	a1 1d       	adc	r26, r1
 cfe:	20 d0       	rcall	.+64     	; 0xd40 <__ultoa_invert+0x84>
 d00:	09 f4       	brne	.+2      	; 0xd04 <__ultoa_invert+0x48>
 d02:	68 94       	set
 d04:	3f 91       	pop	r19
 d06:	2a e0       	ldi	r18, 0x0A	; 10
 d08:	26 9f       	mul	r18, r22
 d0a:	11 24       	eor	r1, r1
 d0c:	30 19       	sub	r19, r0
 d0e:	30 5d       	subi	r19, 0xD0	; 208
 d10:	31 93       	st	Z+, r19
 d12:	de f6       	brtc	.-74     	; 0xcca <__ultoa_invert+0xe>
 d14:	cf 01       	movw	r24, r30
 d16:	08 95       	ret
 d18:	46 2f       	mov	r20, r22
 d1a:	47 70       	andi	r20, 0x07	; 7
 d1c:	40 5d       	subi	r20, 0xD0	; 208
 d1e:	41 93       	st	Z+, r20
 d20:	b3 e0       	ldi	r27, 0x03	; 3
 d22:	0f d0       	rcall	.+30     	; 0xd42 <__ultoa_invert+0x86>
 d24:	c9 f7       	brne	.-14     	; 0xd18 <__ultoa_invert+0x5c>
 d26:	f6 cf       	rjmp	.-20     	; 0xd14 <__ultoa_invert+0x58>
 d28:	46 2f       	mov	r20, r22
 d2a:	4f 70       	andi	r20, 0x0F	; 15
 d2c:	40 5d       	subi	r20, 0xD0	; 208
 d2e:	4a 33       	cpi	r20, 0x3A	; 58
 d30:	18 f0       	brcs	.+6      	; 0xd38 <__ultoa_invert+0x7c>
 d32:	49 5d       	subi	r20, 0xD9	; 217
 d34:	31 fd       	sbrc	r19, 1
 d36:	40 52       	subi	r20, 0x20	; 32
 d38:	41 93       	st	Z+, r20
 d3a:	02 d0       	rcall	.+4      	; 0xd40 <__ultoa_invert+0x84>
 d3c:	a9 f7       	brne	.-22     	; 0xd28 <__ultoa_invert+0x6c>
 d3e:	ea cf       	rjmp	.-44     	; 0xd14 <__ultoa_invert+0x58>
 d40:	b4 e0       	ldi	r27, 0x04	; 4
 d42:	a6 95       	lsr	r26
 d44:	97 95       	ror	r25
 d46:	87 95       	ror	r24
 d48:	77 95       	ror	r23
 d4a:	67 95       	ror	r22
 d4c:	ba 95       	dec	r27
 d4e:	c9 f7       	brne	.-14     	; 0xd42 <__ultoa_invert+0x86>
 d50:	00 97       	sbiw	r24, 0x00	; 0
 d52:	61 05       	cpc	r22, r1
 d54:	71 05       	cpc	r23, r1
 d56:	08 95       	ret
 d58:	9b 01       	movw	r18, r22
 d5a:	ac 01       	movw	r20, r24
 d5c:	0a 2e       	mov	r0, r26
 d5e:	06 94       	lsr	r0
 d60:	57 95       	ror	r21
 d62:	47 95       	ror	r20
 d64:	37 95       	ror	r19
 d66:	27 95       	ror	r18
 d68:	ba 95       	dec	r27
 d6a:	c9 f7       	brne	.-14     	; 0xd5e <__ultoa_invert+0xa2>
 d6c:	62 0f       	add	r22, r18
 d6e:	73 1f       	adc	r23, r19
 d70:	84 1f       	adc	r24, r20
 d72:	95 1f       	adc	r25, r21
 d74:	a0 1d       	adc	r26, r0
 d76:	08 95       	ret

00000d78 <__prologue_saves__>:
 d78:	2f 92       	push	r2
 d7a:	3f 92       	push	r3
 d7c:	4f 92       	push	r4
 d7e:	5f 92       	push	r5
 d80:	6f 92       	push	r6
 d82:	7f 92       	push	r7
 d84:	8f 92       	push	r8
 d86:	9f 92       	push	r9
 d88:	af 92       	push	r10
 d8a:	bf 92       	push	r11
 d8c:	cf 92       	push	r12
 d8e:	df 92       	push	r13
 d90:	ef 92       	push	r14
 d92:	ff 92       	push	r15
 d94:	0f 93       	push	r16
 d96:	1f 93       	push	r17
 d98:	cf 93       	push	r28
 d9a:	df 93       	push	r29
 d9c:	cd b7       	in	r28, 0x3d	; 61
 d9e:	de b7       	in	r29, 0x3e	; 62
 da0:	ca 1b       	sub	r28, r26
 da2:	db 0b       	sbc	r29, r27
 da4:	0f b6       	in	r0, 0x3f	; 63
 da6:	f8 94       	cli
 da8:	de bf       	out	0x3e, r29	; 62
 daa:	0f be       	out	0x3f, r0	; 63
 dac:	cd bf       	out	0x3d, r28	; 61
 dae:	09 94       	ijmp

00000db0 <__epilogue_restores__>:
 db0:	2a 88       	ldd	r2, Y+18	; 0x12
 db2:	39 88       	ldd	r3, Y+17	; 0x11
 db4:	48 88       	ldd	r4, Y+16	; 0x10
 db6:	5f 84       	ldd	r5, Y+15	; 0x0f
 db8:	6e 84       	ldd	r6, Y+14	; 0x0e
 dba:	7d 84       	ldd	r7, Y+13	; 0x0d
 dbc:	8c 84       	ldd	r8, Y+12	; 0x0c
 dbe:	9b 84       	ldd	r9, Y+11	; 0x0b
 dc0:	aa 84       	ldd	r10, Y+10	; 0x0a
 dc2:	b9 84       	ldd	r11, Y+9	; 0x09
 dc4:	c8 84       	ldd	r12, Y+8	; 0x08
 dc6:	df 80       	ldd	r13, Y+7	; 0x07
 dc8:	ee 80       	ldd	r14, Y+6	; 0x06
 dca:	fd 80       	ldd	r15, Y+5	; 0x05
 dcc:	0c 81       	ldd	r16, Y+4	; 0x04
 dce:	1b 81       	ldd	r17, Y+3	; 0x03
 dd0:	aa 81       	ldd	r26, Y+2	; 0x02
 dd2:	b9 81       	ldd	r27, Y+1	; 0x01
 dd4:	ce 0f       	add	r28, r30
 dd6:	d1 1d       	adc	r29, r1
 dd8:	0f b6       	in	r0, 0x3f	; 63
 dda:	f8 94       	cli
 ddc:	de bf       	out	0x3e, r29	; 62
 dde:	0f be       	out	0x3f, r0	; 63
 de0:	cd bf       	out	0x3d, r28	; 61
 de2:	ed 01       	movw	r28, r26
 de4:	08 95       	ret

00000de6 <_exit>:
 de6:	f8 94       	cli

00000de8 <__stop_program>:
 de8:	ff cf       	rjmp	.-2      	; 0xde8 <__stop_program>
